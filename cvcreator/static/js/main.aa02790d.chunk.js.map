{"version":3,"sources":["components/cv/sections/section.jsx","components/cv/sections/portrait.jsx","components/cv/sections/contact.jsx","components/cv/sections/education.jsx","components/cv/sections/skills.jsx","components/cv/sections/introduction.jsx","components/cv/sections/work-experience.jsx","components/cv/cv.jsx","utils/storage.js","theme/useTheme.jsx","components/cv/dashboard/theme-selector.jsx","components/cv/dashboard/create-theme.jsx","components/cv/dashboard/dashboard.jsx","components/cv/user-info-forms/cv-input.jsx","components/cv/user-info-forms/cv-form.jsx","components/cv/user-info-forms/deletable-field-group.jsx","components/cv/user-info-forms/cv-dynamic-form.jsx","components/cv/user-info-forms/cv-image-form.jsx","components/cv/cv-creator.jsx","components/header.jsx","components/hero.jsx","components/footer.jsx","App.js","index.js"],"names":["CVSection","styled","section","props","EditIconContainer","div","EditIcon","i","Section","children","formDisplay","sectionName","useState","displayEditIcon","setDisplayEditIcon","editIconContainer","useRef","onMouseEnter","onMouseLeave","CSSTransition","nodeRef","in","timeout","classNames","unmountOnExit","ref","className","onClick","PortraitContainer","PortraitWrapper","PortraitImage","img","Portrait","fields","portrait_image","src","alt","ContactItem","type","value","contact_phone","contact_email","contact_portfolio","contact_github","contact_linkedIn","contact_instagram","contact_youtube","contact_facebook","getIconClass","Contact","Object","entries","map","key","inputInfo","InstitutionWrapper","InstitutionDiv","degree","institution","timeToDegree","Education","numberIdentifiers","keys","charAt","length","sort","Set","getFieldGroupNumbers","groupNum","degreeInfo","institutionInfo","timeToDegreeInfo","Skill","li","SkillGroup","fieldGroup","listItems","forEach","field","listItemIdentifier","toUpperCase","listItem","push","winnowAndSortListitems","Skills","groupedFields","groupTheFields","group","FirstName","span","ProfessionalTitle","h4","Introduction","introduction_given","introduction_surname","introduction_title","introduction_about","PositionTitle","Position","WorkExperience","CVWrapper","theme","bg","fg","contentFont","headerFont","accentBg","LeftColumn","accentFg","RightColumn","CV","this","portrait","contact","education","skills","introduction","workExperience","React","Component","setToLS","window","localStorage","setItem","JSON","stringify","getFromLS","getItem","parse","useTheme","themes","data","navyAvi","setTheme","themeLoaded","setThemeLoaded","setMode","mode","useEffect","allThemes","localTheme","getFonts","google","ThemeMenu","Dropdown","Menu","ThemeOption","Item","ThemeIcon","ThemeSelector","workingThemeSet","themeContext","useContext","ThemeContext","autoClose","Toggle","id","varient","values","chosenTheme","name","active","ThemeCreatorMenu","CreatorLegend","legend","CreatorTextInput","Form","Control","CreatorSelect","Select","CreatorOption","option","SaveButton","button","CreateTheme","themeChangeHandle","createdThemeSave","allFonts","hFontVal","cFontVal","WebFont","load","families","current","handleFontChange","event","target","onSubmit","preventDefault","saveCreatedTheme","FloatingLabel","controlId","label","placeholder","onChange","Label","title","font","as","DashboardWrapper","PrintButton","Dashboard","printHandle","setAllThemes","workingTheme","uuidv4","allThemeNames","includes","toString","ensureNameUniqueness","str","newThemeData","replace","word","index","toLowerCase","CVInput","inputName","currentValue","inputType","labelContent","inputChangeHandle","handleInputChange","rows","cols","htmlFor","CVForm","string","displayForm","slice","DeletableFieldGroup","fieldGroupDelete","CVDynamicFrom","fieldGroupCreate","prettifiedSectionName","split","join","splitCamelCaseString","newGroup","newGroupNum","firstGroupCopy","newFieldName","createFieldGroup","CVImageForm","imageChangeHandle","class","e","reader","FileReader","file","files","onloadend","result","readAsDataURL","handleImageChange","CVCreatorWrapper","Creator","CVCreator","CVRef","setWorkingTheme","education_degree0","education_institution0","education_timeToDegree0","education_degree1","education_institution1","education_timeToDegree1","skills_heading0","skills_itemA0","skills_itemB0","skills_itemC0","skills_itemD0","skills_itemE0","skills_itemF0","skills_itemG0","skills_itemH0","skills_itemI0","skills_heading1","skills_itemA1","skills_itemB1","skills_itemC1","skills_itemD1","skills_itemE1","skills_itemF1","skills_itemG1","skills_itemH1","workExperience_company0","workExperience_position0","workExperience_duration0","workExperience_summary0","workExperience_achievementA0","workExperience_achievementB0","workExperience_achievementC0","workExperience_achievementD0","workExperience_achievementE0","workExperience_company1","workExperience_position1","workExperience_duration1","workExperience_summary1","workExperience_achievementA1","workExperience_achievementB1","workExperience_achievementC1","workExperience_achievementD1","workExperience_achievementE1","workExperience_achievementF1","inputFields","setInputFields","setDisplayForm","inputField","newInputObject","prevState","displaySectionForm","handlePrint","useReactToPrint","content","sectionedFields","inputFlds","sectionSortedFields","underscoreIndex","indexOf","sortStateIntoSections","displayData","sortedState","flds","displayIndex","every","distillDisplayData","formType","getFormType","newState","imageChangeObject","Header","Hero","Footer","App","Index","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aa02790d.chunk.js","sourcesContent":["import React, {useState, useRef} from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport styled from 'styled-components';\r\n\r\nconst CVSection = styled.section`\r\n    margin-bottom: ${props => props.section === 'introduction' ? \"0\" : \"1.5em\"};\r\n    position: relative;\r\n    ${props => props.section === 'introduction' && \"height: calc(1.8in + 1.5em);\"};\r\n`;\r\n\r\nconst EditIconContainer = styled.div`\r\n    position: absolute;\r\n    top: 0px;\r\n    right: 0px;\r\n    height: .3in;\r\n    width: .3in;\r\n    display: flex;\r\n    align-items: center;\r\n    border-radius: 6%;\r\n    box-shadow: 0 0 3px rgb(88,88,88);\r\n    background-color: rgb(248, 248, 248);\r\n\r\n    ${props => props.section === 'portrait' && \"margin-top: .6in;\"}\r\n\r\n    &:hover {\r\n        background-color: rgb(88,88,88);\r\n    }\r\n`;\r\n\r\nconst EditIcon = styled.i`\r\n    margin: 0 auto;\r\n    font-size: 1.5em;\r\n    color: rgb(88,88,88);\r\n    ${EditIconContainer}:hover & {\r\n        color: rgb(248, 248, 248);\r\n    }\r\n`;\r\n\r\nfunction Section({children, formDisplay, sectionName}) {\r\n    const [displayEditIcon, setDisplayEditIcon] = useState(false);\r\n    const editIconContainer = useRef(null);\r\n\r\n    const displayForm = () => {\r\n\t\tformDisplay(sectionName);\r\n\t}\r\n\r\n    return (\r\n        <CVSection\r\n            section={sectionName}\r\n            onMouseEnter={() => setDisplayEditIcon(true)}\r\n            onMouseLeave={() => setDisplayEditIcon(false)}\r\n        >\r\n            <CSSTransition \r\n                nodeRef={editIconContainer}\r\n                in={displayEditIcon}\r\n                timeout={300}\r\n                classNames=\"edit-icon\"\r\n                unmountOnExit\r\n            >\r\n                <EditIconContainer ref={editIconContainer} className=\"edit-icon-container\" section={sectionName}>\r\n                    <EditIcon\r\n                        className=\"bi bi-pencil-square\"\r\n                        onClick={displayForm}\r\n                    ></EditIcon>\r\n                </EditIconContainer>\r\n            </CSSTransition>\r\n            {children}\r\n        </CVSection>\r\n    );\r\n}\r\n\r\nexport default Section;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst PortraitContainer = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    height: 2.4in;\r\n`;\r\n\r\nconst PortraitWrapper = styled.div`\r\n    background-color: rgb(189, 189, 189);\r\n    width: 1.61in;\r\n    height: 1.61in;\r\n    border-radius: 50%;\r\n    margin-top: 1em;\r\n`;\r\n\r\nconst PortraitImage = styled.img`\r\n    width: 1.62in;\r\n    height: 1.62in;\r\n    border-radius: 50%;\r\n    background-color: $accent-bg;\r\n`;\r\n\r\nfunction Portrait({fields}) {\r\n\r\n    return (\r\n        <PortraitContainer>\r\n            <PortraitWrapper>\r\n                {fields.portrait_image !== '' &&\r\n                    <PortraitImage src={fields.portrait_image} alt=\"Portrait\" />}\r\n            </PortraitWrapper>\r\n        </PortraitContainer>\r\n    );\r\n}\r\n\r\nexport default Portrait;","import React from 'react';\r\n\r\nfunction ContactItem({type, value}) {\r\n\r\n\tconst getIconClass = (type) => {\r\n\t\tconst iconClasses = {\r\n\t\t\tcontact_phone: \"bi bi-telephone-fill\",\r\n\t\t\tcontact_email: \"bi bi-envelope-fill\",\r\n\t\t\tcontact_portfolio: \"bi bi-border-style\",\r\n\t\t\tcontact_github: \"bi bi-github\",\r\n\t\t\tcontact_linkedIn: \"bi bi-linkedin\",\r\n\t\t\tcontact_instagram: \"bi bi-instagram\",\r\n\t\t\tcontact_youtube: \"bi bi-youtube\",\r\n\t\t\tcontact_facebook: \"bi bi-facebook\",\r\n\t\t};\r\n\r\n\t\treturn iconClasses[type];\r\n\t}\r\n\t\r\n\tif (value === null || value === '') return null;\r\n\r\n\treturn (\r\n\t\t<li className=\"contact-item\">\r\n\t\t\t<i className={getIconClass(type)}></i>\r\n\t\t\t{value}\r\n\t\t</li>\r\n\t);\t\r\n\t\r\n}\r\n\r\nfunction Contact({fields, formDisplay}) {\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h2>Contact</h2>\r\n\t\t\t<ul className=\"contact-list\">\r\n\t\t\t\t{ Object.entries(fields).map(([key, inputInfo]) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<ContactItem \r\n\t\t\t\t\t\t\ttype={key}\r\n\t\t\t\t\t\t\tvalue={(inputInfo)}\r\n\t\t\t\t\t\t\tkey={key}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</ul>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default Contact;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst InstitutionWrapper = styled.div`\r\n    margin-bottom: 1em;\r\n        p {\r\n            margin-bottom: .2em;\r\n        }\r\n`;\r\n\r\nfunction InstitutionDiv({degree, institution, timeToDegree}) {\r\n    return (\r\n        <InstitutionWrapper>\r\n            <h4>{degree}</h4>\r\n            <p>{institution}</p>\r\n            <p>{timeToDegree}</p>\r\n        </InstitutionWrapper>\r\n    );\r\n}\r\n\r\nfunction Education({fields}) {   \r\n\r\n    const getFieldGroupNumbers = () => {\r\n        const numberIdentifiers = Object.keys(fields).map((key) => key.charAt(key.length - 1)).sort();\r\n        const uniqueIdentifiers = [...new Set(numberIdentifiers)];\r\n        return uniqueIdentifiers;\r\n    }\r\n\r\n    return (\r\n        <>  \r\n            <h2>Education</h2>\r\n            {\r\n                getFieldGroupNumbers().map((groupNum) => {\r\n                    const degreeInfo = fields['education_degree' + groupNum];\r\n                    const institutionInfo = fields['education_institution' + groupNum];\r\n                    const timeToDegreeInfo = fields['education_timeToDegree' + groupNum];\r\n\r\n                    return (\r\n                        <InstitutionDiv \r\n                            degree={degreeInfo}\r\n                            institution={institutionInfo}\r\n                            timeToDegree={timeToDegreeInfo}\r\n                            key={degreeInfo + groupNum}\r\n                        />\r\n                    );\r\n                })\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Education;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Skill = styled.li`\r\n    && {\r\n        margin: 0;\r\n    }\r\n`;\r\n\r\nfunction SkillGroup({fieldGroup, groupNum}) {\r\n    \r\n    function winnowAndSortListitems(fields) {\r\n        // Removes any empty list items\r\n        let listItems = [];\r\n\r\n        Object.keys(fields).forEach((field) => {\r\n            const listItemIdentifier = field.charAt(field.length - 2);\r\n            if (listItemIdentifier === listItemIdentifier.toUpperCase()) {\r\n                const listItem = fieldGroup[field];\r\n\r\n                if (listItem !== null && listItem !== '') {\r\n                    listItems.push(<Skill key={listItemIdentifier}>{listItem}</Skill>);\r\n                }\r\n            }\r\n        });\r\n\r\n        const sortedListItems = listItems.sort()\r\n        return sortedListItems;\r\n    }\r\n\r\n    return (\r\n\t\t<div className=\"skill-list-container\">\r\n\t\t\t<h4>{fieldGroup['skills_heading' + groupNum]}</h4>\r\n\t\t\t<ul className=\"skill-list\">\r\n\t\t\t\t{winnowAndSortListitems(fieldGroup)}\r\n\t\t\t</ul>\r\n\t\t</div>\r\n    );\r\n}\r\n\r\nfunction Skills({fields}) {\r\n\r\n\tfunction groupTheFields(fields) {\r\n        let groupedFields = [];\r\n\r\n        Object.keys(fields).forEach((field) => {\r\n            const groupNum = field.charAt(field.length - 1);\r\n            if (!groupedFields[groupNum]) {\r\n                groupedFields[groupNum] = {}\r\n            }\r\n            groupedFields[groupNum][field] = fields[field];\r\n        });\r\n\r\n        return groupedFields;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h2>Skills</h2>\r\n\t\t\t\t{\r\n                    groupTheFields(fields).map((group, i) => {\r\n                        return (\r\n                            <SkillGroup \r\n                                fieldGroup={group}\r\n                                groupNum={i}\r\n                                key={i}\r\n                            />\r\n                        );\r\n                    })\r\n                }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Skills;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst FirstName = styled.span`\r\n    font-weight: bold;\r\n`;\r\n\r\nconst ProfessionalTitle = styled.h4`\r\n    && {\r\n        letter-spacing: .15em;\r\n        margin-bottom: 1em;\r\n    }\r\n`;\r\n\r\nfunction Introduction({fields}) {\r\n    return (\r\n        <>\r\n            <h1>\r\n                <FirstName>{fields.introduction_given}</FirstName> \r\n                {fields.introduction_surname}\r\n            </h1>\r\n            <ProfessionalTitle className=\"pro-title\">{fields.introduction_title}</ProfessionalTitle>\r\n            <p className=\"about\">{fields.introduction_about}</p>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Introduction;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst PositionTitle = styled.span`\r\n    font-weight: normal;\r\n`;\r\n\r\nfunction Position({fieldGroup, groupNum}) {\r\n    \r\n    function winnowAndSortListitems(fields) {\r\n        let listItems = [];\r\n\r\n        Object.keys(fields).forEach((field) => {\r\n            const listItemIdentifier = field.charAt(field.length - 2);\r\n            if (listItemIdentifier === listItemIdentifier.toUpperCase()) {\r\n                const listItem = fieldGroup[field];\r\n\r\n                if (listItem !== null && listItem !== '') {\r\n                    listItems.push(<li key={listItemIdentifier}>{listItem}</li>);\r\n                }\r\n            }\r\n        });\r\n\r\n        const sortedListItems = listItems.sort()\r\n        return sortedListItems;\r\n    }\r\n\r\n    return (\r\n        <div className=\"position\">\r\n            <h4 className=\"company\">{fieldGroup['workExperience_company' + groupNum]} <PositionTitle>{fieldGroup['workExperience_position' + groupNum]}</PositionTitle></h4>\r\n            <p className=\"duration\">{fieldGroup['workExperience_duration' + groupNum]}</p>\r\n            <p className=\"position-summary\">{fieldGroup['workExperience_summary' + groupNum]}</p>\r\n            <ul className=\"achievements\">\r\n                {winnowAndSortListitems(fieldGroup)}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction WorkExperience({fields}) {\r\n\r\n    function groupTheFields(fields) {\r\n        let groupedFields = [];\r\n\r\n        Object.keys(fields).forEach((field) => {\r\n            const groupNum = field.charAt(field.length - 1);\r\n            if (!groupedFields[groupNum]) {\r\n                groupedFields[groupNum] = {}\r\n            }\r\n            groupedFields[groupNum][field] = fields[field];\r\n        });\r\n\r\n        return groupedFields;\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <h2>Work Experience</h2>\r\n            {\r\n                groupTheFields(fields).map((group, i) => {\r\n                    return (\r\n                        <Position \r\n                            fieldGroup={group}\r\n                            groupNum={i}\r\n                            key={i}\r\n                        />\r\n                    );\r\n                })\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default WorkExperience;","import React from 'react';\r\nimport Section from './sections/section'\r\nimport Portrait from './sections/portrait';\r\nimport Contact from './sections/contact';\r\nimport Education from './sections/education';\r\nimport Skills from './sections/skills';\r\nimport Introduction from './sections/introduction';\r\nimport WorkExperience from './sections/work-experience';\r\nimport styled from 'styled-components';\r\n\r\n//react-to-print only prints class components\r\n\r\nconst CVWrapper = styled.div`\r\n\tword-wrap: break-word;\r\n    display: flex;\r\n    width: 8.5in;\r\n    height: 11in;\r\n    background-color: ${props => props.theme.bg};\r\n    color: ${props => props.theme.fg};\r\n    font-family: ${props => props.theme.contentFont};\r\n    text-align: left;\r\n\th1, h2, h3, h4, h5 {\r\n        font-family: ${props => props.theme.headerFont};\r\n        color: ${props => props.theme.accentBg};\r\n    }\r\n\th2 {\r\n        font-size: 1.4em;\r\n        letter-spacing: .1em;\r\n        border-bottom: ${props => props.theme.accentBg};\r\n        padding: .3em 0;\r\n        margin-bottom: 1em;\r\n    }\r\n\r\n\th4 {\r\n        font-size: .9em;\r\n        margin-bottom: .2em;\r\n        font-weight: bold;\r\n    }\r\n\r\n\tp {\r\n        font-size: .8em;\r\n        margin-bottom: .9em;\r\n    }\r\n\r\n    li {\r\n        font-size: .9em;\r\n    }\r\n`;\r\n\r\nconst LeftColumn = styled.div`\r\n\twidth: 32%;\r\n\tbackground-color: ${props => props.theme.accentBg};\r\n\tcolor: ${props => props.theme.accentFg};\r\n\tpadding-left: .6in;\r\n\tpadding-bottom: .6in;\r\n\t.edit-icon-container {\r\n\t\tmargin-right: .5em;\r\n\t}\r\n\r\n\th1, h2, h3, h4, h5 {\r\n            color: ${props => props.theme.bg};\r\n        }\r\n\r\n    h2 {\r\n        border-bottom: 1.5px solid ${props => props.theme.bg};\r\n    }\r\n\t\r\n\tul {\r\n            list-style: none;\r\n            padding: 0;\r\n\r\n            li {\r\n                margin: .5em 0;\r\n            }\r\n            \r\n            i {\r\n                margin-right: .5em;\r\n            }           \r\n        }\r\n`;\r\n\r\nconst RightColumn = styled.div`\r\n\twidth: 68%;\r\n    padding: .6in .6in .6in 2.5em;\r\n\tul {\r\n        padding-left: 1em;\r\n    }\r\n`;\r\n\r\nclass CV extends React.Component {\r\n\trender() {\r\n\t\tconst {portrait, contact, education, skills, introduction, workExperience, formDisplay} = this.props;\r\n\r\n\t\treturn (\r\n\t\t\t<CVWrapper className=\"cv\">\r\n\t\t\t\t\t<LeftColumn className=\"left-column\">\r\n\t\t\t\t\t\t<Section formDisplay={formDisplay} sectionName=\"portrait\">\r\n\t\t\t\t\t\t\t<Portrait fields={portrait} />\r\n\t\t\t\t\t\t</Section>\r\n\t\t\t\t\t\t<Section formDisplay={formDisplay} sectionName=\"contact\">\r\n\t\t\t\t\t\t\t<Contact fields={contact} />\r\n\t\t\t\t\t\t</Section>\r\n\t\t\t\t\t\t<Section formDisplay={formDisplay} sectionName=\"education\">\r\n\t\t\t\t\t\t\t<Education fields={education} />\r\n\t\t\t\t\t\t</Section>\r\n\t\t\t\t\t\t<Section formDisplay={formDisplay} sectionName=\"skills\">\r\n\t\t\t\t\t\t\t<Skills fields={skills} />\r\n\t\t\t\t\t\t</Section>\r\n\t\t\t\t\t</LeftColumn>\r\n\t\t\t\t\t<RightColumn className=\"right-column\">\r\n\t\t\t\t\t\t<Section formDisplay={formDisplay} sectionName=\"introduction\">\r\n\t\t\t\t\t\t\t<Introduction fields={introduction} />\r\n\t\t\t\t\t\t</Section>\r\n\t\t\t\t\t\t<Section formDisplay={formDisplay} sectionName=\"workExperience\">\r\n\t\t\t\t\t\t\t<WorkExperience fields={workExperience}/>\r\n\t\t\t\t\t\t</Section>\r\n\t\t\t\t\t</RightColumn>\r\n\t\t\t</CVWrapper>\r\n\t\t);\r\n\t\r\n\t}\r\n}\r\n\r\nexport default CV;","export const setToLS = (key, value) => {\r\n    window.localStorage.setItem(key, JSON.stringify(value));\r\n}\r\n\r\nexport const getFromLS = key => {\r\n    const value = window.localStorage.getItem(key);\r\n\r\n    if (value) {\r\n        return JSON.parse(value);\r\n    }\r\n}","import { useEffect, useState } from 'react';\r\nimport { setToLS, getFromLS } from '../utils/storage';\r\n\r\nexport const useTheme = () => {\r\n    const  themes = getFromLS('all-themes');\r\n    const [theme, setTheme] = useState(themes.data.navyAvi);\r\n    const [themeLoaded, setThemeLoaded] = useState(false);\r\n\r\n    const setMode = (mode) => {\r\n        setToLS('theme', mode);\r\n        setTheme(mode);\r\n    }\r\n\r\n    const getFonts = () => {\r\n        const allFonts = getFromLS('all-fonts');\r\n        const googleFonts = allFonts.data.google;\r\n        return googleFonts;\r\n    }\r\n\r\n    useEffect(() => {\r\n        const allThemes = getFromLS('all-themes');\r\n        const localTheme = getFromLS('theme');\r\n        localTheme ? setTheme(localTheme) : setMode(allThemes.data.navyAvi);\r\n        setThemeLoaded(true);\r\n    }, []);\r\n\r\n    return { theme, themeLoaded, setMode, getFonts };\r\n}","import React, { useContext } from 'react';\r\nimport { useTheme } from '../../../theme/useTheme';\r\nimport styled, { ThemeContext } from 'styled-components';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\n\r\nconst ThemeMenu = styled(Dropdown.Menu)`\r\n    background-color: rgba(30, 67, 86, 89%);\r\n    min-width: 12rem;\r\n    transform: translate3d(4px, 65px, 0px)!important;\r\n`;\r\n\r\nconst ThemeOption = styled(Dropdown.Item)`\r\n    &&.btn.dropdown-item {\r\n        display: flex;\r\n        align-items: center;\r\n        width: auto;\r\n        padding: 8px 8px;\r\n        margin: 3;\r\n        border: none;\r\n        &.active {\r\n        border: 2px solid #68A4C4;\r\n        &:focus {\r\n            box-shadow: none;\r\n        }\r\n    }\r\n    }\r\n`;\r\n\r\nconst ThemeIcon = styled.div`\r\n    width: 30px;\r\n    height: 30px;\r\n    background: ${props => `linear-gradient( 90deg, ${props.accentBg}, ${props.accentBg} 50%, ${props.bg} 51% )`};\r\n    box-shadow: 0 0 1px #eaeaea;\r\n    border-radius: 50%;\r\n    margin-right: 8px;\r\n`;\r\n\r\nfunction ThemeSelector({workingThemeSet, allThemes}) {\r\n    const {setMode} = useTheme();\r\n    const themeContext = useContext(ThemeContext);\r\n\r\n    const setWorkingTheme = (chosenTheme) => {\r\n        setMode(chosenTheme);\r\n        // Give working theme default name\r\n        workingThemeSet({...chosenTheme, ...{name: 'New Theme'}});\r\n    }\r\n\r\n    return (\r\n        <Dropdown autoClose=\"outside\">\r\n            <Dropdown.Toggle id=\"dropdown-basic\" varient=\"outline-primary\">\r\n                Select Theme\r\n            </Dropdown.Toggle>\r\n\r\n            <ThemeMenu varient=\"dark\">\r\n                {\r\n                    Object.values(allThemes).map(theme => {\r\n                        return (\r\n                            <ThemeOption\r\n                                className=\"btn\"\r\n                                onClick={() => setWorkingTheme(theme)}\r\n                                active={theme.id === themeContext.id}\r\n                                key={theme.id}>\r\n                                <ThemeIcon \r\n                                    bg={theme.bg}\r\n                                    accentBg={theme.accentBg}\r\n                                />\r\n                                {theme.name}\r\n                            </ThemeOption>\r\n                        );\r\n                    })\r\n                }\r\n            </ThemeMenu>\r\n        </Dropdown>\r\n    );\r\n}\r\n\r\nexport default ThemeSelector;","import React, { useContext, useRef, useEffect } from 'react';\r\nimport styled, { ThemeContext } from \"styled-components\";\r\nimport { useTheme } from '../../../theme/useTheme';\r\nimport { Dropdown } from 'react-bootstrap';\r\nimport { Form, FloatingLabel } from 'react-bootstrap';\r\nimport WebFont from 'webfontloader';\r\n\r\nconst ThemeCreatorMenu = styled(Dropdown.Menu)`\r\n    background-color: rgba(30, 67, 86, 89%);\r\n    width: 16em;\r\n    color: #f9f9f9;\r\n    transform: translate3d(-20px, 65px, 0px)!important;\r\n`;\r\n\r\nconst CreatorLegend = styled.legend`\r\n    border-bottom: 2px solid #68A4C4;\r\n    display: block;\r\n    width: 100%;\r\n`;\r\n\r\nconst CreatorTextInput = styled(Form.Control)`\r\n    color: #f9f9f9;\r\n    background-color: transparent;\r\n    border: 2px solid #68A4C4;\r\n    &:focus {\r\n        background-color: transparent;\r\n        color:#f9f9f9;\r\n        border: 2px solid #68A4C4;\r\n        box-shadow: 0 0 3px 1px #ffffff4d;\r\n    }\r\n    &:active {\r\n        background-color: transparent;\r\n        border: 2px solid #68A4C4;\r\n    } \r\n`;\r\n\r\nconst CreatorSelect = styled(Form.Select)`\r\n    background-color: transparent;\r\n    border: 2px solid #68A4C4;\r\n    color: #f9f9f9;\r\n    padding: 20px;\r\n    &:focus {\r\n        background-color: transparent;\r\n        color:#f9f9f9;\r\n        border: 2px solid #68A4C4;\r\n        box-shadow: 0 0 3px 1px #ffffff4d;\r\n    }\r\n    &:active {\r\n        background-color: transparent;\r\n        border: 2px solid #68A4C4;\r\n    } \r\n`;\r\n\r\nconst CreatorOption = styled.option`\r\n    background-color: rgba(30, 67, 86);\r\n`;\r\n\r\nconst SaveButton = styled.button`\r\n    &&.btn.create-theme {\r\n        background: #68A4C4;\r\n        margin: 0;\r\n        width: auto;\r\n\r\n        &:hover {\r\n            background: #a2cce3;\r\n        }\r\n    }\r\n`;\r\n\r\nfunction CreateTheme({themeChangeHandle, createdThemeSave}) {\r\n    const themeContext = useContext(ThemeContext);\r\n    const {getFonts} = useTheme();\r\n    const allFonts = getFonts();\r\n    // Font value refs for fontloader\r\n    let hFontVal = useRef(themeContext.headerFont);\r\n    let cFontVal = useRef(themeContext.contentFont);\r\n\r\n    useEffect(() => {\r\n        WebFont.load({\r\n            google: {\r\n              families: [hFontVal.current, cFontVal.current]\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    const handleFontChange = (event) => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        name === 'headerFont' ? hFontVal.current = value : cFontVal.current = value;\r\n\r\n        WebFont.load({\r\n            google: {\r\n              families: [hFontVal.current, cFontVal.current]\r\n            }\r\n        });\r\n\r\n        themeChangeHandle(event);\r\n    }\r\n\r\n    const saveCreatedTheme = (event) => {\r\n        event.preventDefault();\r\n        createdThemeSave();\r\n    }\r\n\r\n    return(\r\n        <Dropdown>\r\n            <Dropdown.Toggle id=\"dropdown-basic\" varient=\"outline-primary\">\r\n                Create Theme\r\n            </Dropdown.Toggle>\r\n\r\n            <ThemeCreatorMenu varient=\"dark\">\r\n                <Form onSubmit={(event) => saveCreatedTheme(event)}>\r\n                    <div className=\"container\">\r\n                        <div className=\"row mb-3\">\r\n                            <div className=\"col-10 offset-1\">\r\n                                <FloatingLabel\r\n                                    controlId=\"theme-name\"\r\n                                    label=\"Theme Name\">\r\n                                <CreatorTextInput\r\n                                    type=\"text\"\r\n                                    placeholder=\"Theme Name\"\r\n                                    value={themeContext.name}\r\n                                    name=\"name\"\r\n                                    onChange={(event) => themeChangeHandle(event)}\r\n                                />\r\n                                </FloatingLabel>\r\n                            </div>\r\n                        </div>\r\n                        <fieldset>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-6 offset-1\">\r\n                                    <CreatorLegend>Main</CreatorLegend>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row mb-3\">\r\n                                <div className=\"col-5 offset-1\">\r\n                                    <Form.Label>Background</Form.Label>\r\n                            \r\n                                    <Form.Control\r\n                                        type=\"color\"\r\n                                        id=\"main-background-color\"\r\n                                        title=\"Main Background Color\"\r\n                                        value={themeContext.bg}\r\n                                        name=\"bg\"\r\n                                        onChange={(event) => themeChangeHandle(event)}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"col-5\">\r\n                                    <Form.Label>Foreground</Form.Label>\r\n                            \r\n                                    <Form.Control\r\n                                        type=\"color\"\r\n                                        id=\"main-foreground-color\"\r\n                                        title=\"Main Foreground Color\"\r\n                                        value={themeContext.fg}\r\n                                        name=\"fg\"\r\n                                        onChange={(event) => themeChangeHandle(event)}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </fieldset>\r\n                        <fieldset>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-6 offset-1\">\r\n                                    <CreatorLegend>Accent</CreatorLegend>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row mb-3\">\r\n                                <div className=\"col-5 offset-1\">\r\n                                    <Form.Label>Background</Form.Label>\r\n                            \r\n                                    <Form.Control\r\n                                        type=\"color\"\r\n                                        id=\"accent-background-color\"\r\n                                        title=\"Accent Background Color\"\r\n                                        value={themeContext.accentBg}\r\n                                        name=\"accentBg\"\r\n                                        onChange={(event) => themeChangeHandle(event)}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"col-5\">\r\n                                    <Form.Label>Foreground</Form.Label>\r\n                            \r\n                                    <Form.Control\r\n                                        type=\"color\"\r\n                                        id=\"accent-foreground-color\"\r\n                                        title=\"Accent Foreground Color\"\r\n                                        value={themeContext.accentFg}\r\n                                        name=\"accentFg\"\r\n                                        onChange={(event) => themeChangeHandle(event)}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </fieldset>\r\n                        <div className=\"row mb-3\">\r\n                            <div className=\"col-10 offset-1\">\r\n                                <FloatingLabel\r\n                                    controlId=\"header-font\"\r\n                                    label=\"Header Font\">\r\n                                    <CreatorSelect \r\n                                        name=\"headerFont\"\r\n                                        value={themeContext.headerFont}\r\n                                        onChange={(event) => handleFontChange(event)}>\r\n                                        {\r\n                                            allFonts.map((font, i) => {\r\n                                                return (\r\n                                                <CreatorOption \r\n                                                    value={font}\r\n                                                    key={i}>\r\n                                                    {font}\r\n                                                </CreatorOption>\r\n                                                );\r\n                                            })\r\n                                        }\r\n                                    </CreatorSelect>\r\n                                </FloatingLabel>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row mb-3\">\r\n                            <div className=\"col-10 offset-1\">\r\n                                <FloatingLabel\r\n                                    controlId=\"content-font\"\r\n                                    label=\"Content Font\">\r\n                                    <CreatorSelect \r\n                                        name=\"contentFont\"\r\n                                        value={themeContext.contentFont}\r\n                                        onChange={(event) => handleFontChange(event)}>\r\n                                        {\r\n                                            allFonts.map((font, i) => {\r\n                                                return (\r\n                                                <CreatorOption \r\n                                                    value={font}\r\n                                                    key={i}>\r\n                                                    {font}\r\n                                                </CreatorOption>\r\n                                                );\r\n                                            })\r\n                                        }\r\n                                    </CreatorSelect>\r\n                                </FloatingLabel>\r\n                            </div>\r\n                            <div className=\"row mb-3\">\r\n                                <div className=\"col-10 offset-1\">\r\n                                    <Dropdown.Item as={SaveButton} className=\"mt-4 btn create-theme\">\r\n                                        Save Theme\r\n                                    </Dropdown.Item>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Form>\r\n            </ThemeCreatorMenu>\r\n        </Dropdown>\r\n    );\r\n}\r\n\r\nexport default CreateTheme;","import React, { useState, useContext } from 'react';\r\nimport ThemeSelector from './theme-selector';\r\nimport styled, { ThemeContext } from 'styled-components';\r\nimport CreateTheme from './create-theme';\r\nimport { getFromLS } from '../../../utils/storage';\r\nimport { v4 as uuidv4  } from 'uuid';\r\n\r\nconst DashboardWrapper = styled.div`\r\n    display: flex;\r\n    padding-left: 2em;\r\n    padding-right: 2em;\r\n\r\n    && .btn {\r\n        font-family: 'Noto Sans JP', sans-serif;\r\n        font-weight: 500;\r\n        font-size: 14px;\r\n        letter-spacing: 1px;\r\n        padding: 12px 32px;\r\n        border-radius: 10px;\r\n        transition: 0.5s;\r\n        line-height: 1;\r\n        margin: 20px 10px;\r\n        color: #fff;\r\n        background-color: transparent;\r\n        animation-delay: 0.8s;\r\n        border: 2px solid #68A4C4;\r\n        &:hover {\r\n            background: #68A4C4;\r\n            color: #fff;\r\n        }\r\n        &:active {\r\n            background-color: transparent;\r\n            border: 2px solid #68A4C4;\r\n        }\r\n        &:focus {\r\n            background-color: transparent;\r\n            border: 2px solid #68A4C4;\r\n            box-shadow: 0 0 3px 1px #ffffff4d;\r\n        }\r\n    }\r\n`;\r\n\r\nconst PrintButton = styled.button`\r\n    &&.btn {\r\n        margin-right: auto;\r\n    }\r\n`;\r\n\r\nfunction Dashboard({printHandle, workingThemeSet, themeChangeHandle}) {\r\n    const themeContext = useContext(ThemeContext);\r\n    const [allThemes, setAllThemes] = useState(getFromLS('all-themes').data);\r\n\r\n    const camelize = (str) => {\r\n        return str.replace(/(?:^\\w|[A-Z]|\\b\\w)/g, function(word, index) {\r\n          return index === 0 ? word.toLowerCase() : word.toUpperCase();\r\n        }).replace(/\\s+/g, '');\r\n    }\r\n\r\n    const ensureNameUniqueness = (name) => {\r\n        const allThemeNames = Object.values(allThemes).map((theme) => theme.name);\r\n\r\n        if (!allThemeNames.includes(name)) {\r\n            return name;\r\n        }\r\n\r\n        // Add incrementing number to name until it is unique\r\n        let i = 1;\r\n\r\n        while (allThemeNames.includes(name + i.toString())) {\r\n            i += 1;\r\n        }\r\n\r\n        return name + i.toString();\r\n    }\r\n\r\n    const saveCreatedTheme = () => {\r\n        // Duplicate working theme, give it unique id, ensure name uniqueness\r\n        let workingTheme = {...themeContext};\r\n        workingTheme.id = uuidv4();\r\n        workingTheme.name = ensureNameUniqueness(workingTheme.name);\r\n\r\n        // Format it to fit allThemes and combine\r\n        let newThemeData = {};\r\n        newThemeData[camelize(workingTheme[\"name\"])] = {...workingTheme};\r\n   \r\n        // Add to all themes and set with default name\r\n        setAllThemes({...allThemes, ...newThemeData});\r\n        workingThemeSet({...workingTheme, ...{name: \"New Theme\"}});\r\n    }\r\n\r\n    return (\r\n        <DashboardWrapper>\r\n            <PrintButton \r\n\t\t\t\tclassName=\"btn btn-print-cv\"\r\n\t\t\t\tonClick={printHandle}>\r\n\t\t\t\tPrint / Save PDF\r\n\t\t\t</PrintButton>\r\n\t\t\t<ThemeSelector \r\n                workingThemeSet={workingThemeSet} \r\n                allThemes={allThemes}\r\n            />\r\n            <CreateTheme \r\n                themeChangeHandle={themeChangeHandle}\r\n                createdThemeSave={saveCreatedTheme}\r\n            />\r\n        </DashboardWrapper>\r\n    );\r\n}\r\n\r\nexport default Dashboard;","import React from \"react\";\r\n\r\nfunction CVInput( {inputName, currentValue, inputType, labelContent, placeholder, inputChangeHandle} ) {\r\n    \r\n    const handleInputChange = (event) => {\r\n        inputChangeHandle(event);\r\n    }\r\n\r\n    return (\r\n        <div className=\"form-floating mb-3\">\r\n            {inputType === 'textarea' \r\n            ? <textarea \r\n                id={inputName}\r\n                name={inputName}\r\n                value={currentValue || ''}\r\n                type={inputType} \r\n                className=\"form-control mb-3 text-area\"\r\n                rows=\"6\"\r\n                cols=\"40\"\r\n                onChange={handleInputChange}\r\n            ></textarea>\r\n            : <input \r\n                id={inputName}\r\n                name={inputName}\r\n                value={currentValue || ''}\r\n                type={inputType} \r\n                className=\"form-control mb-3\"\r\n                onChange={handleInputChange}\r\n            />\r\n            }\r\n            <label \r\n                htmlFor={inputName} \r\n                className=\"form-label\">\r\n                {labelContent}\r\n            </label>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CVInput;","import React from 'react';\r\nimport CVInput from './cv-input';\r\n\r\nfunction CVForm({fields, section, inputChangeHandle, formDisplay}) {\r\n \r\n    const displayForm = () => {\r\n        formDisplay(null);\r\n    }\r\n\r\n    function capitalizeFirstLetter(string) {\r\n        return string.charAt(0).toUpperCase() + string.slice(1);\r\n    }\r\n\r\n    return(\r\n        <div className=\"form-modal\">\r\n            <div className=\"form-container\">\r\n                <i \r\n                    className=\"bi bi-x-square close-form\"\r\n                    onClick={displayForm}\r\n                ></i>\r\n                <h2>{capitalizeFirstLetter(section)}</h2>\r\n                <p className=\"mb-3\">(Unused fields will not show up on the CV)</p>\r\n                <form>\r\n                    {\r\n                        Object.entries(fields).map(([inputName, inputInfo]) => {\r\n                            return (\r\n                                <CVInput \r\n                                    inputName={inputName}\r\n                                    currentValue={inputInfo[0]}\r\n                                    inputType={inputInfo[1]}\r\n                                    labelContent={inputInfo[2]}\r\n                                    placeholder={inputInfo[3]}\r\n                                    key={inputName}\r\n                                    inputChangeHandle={inputChangeHandle}\r\n                                />                 \r\n                            );\r\n                        }) \r\n                    }\r\n                    <button\r\n                        className=\"btn btn-primary\"\r\n                        onClick={displayForm}\r\n                        type=\"button\"\r\n                    >Done</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CVForm;","import React from 'react';\r\nimport CVInput from './cv-input';\r\n\r\nfunction DeletableFieldGroup({fields, groupNum, inputChangeHandle, fieldGroupDelete}) {\r\n\r\n    const deleteFieldGroup = () => {\r\n        fieldGroupDelete(fields)\r\n    }\r\n        \r\n    return (\r\n        <fieldset>\r\n            {groupNum > 0 &&\r\n            <i \r\n                className=\"bi bi-x-square close-input-group\"\r\n                onClick={() => deleteFieldGroup()}\r\n            ></i> }  \r\n            {\r\n                Object.entries(fields).map(([inputName, inputInfo]) => {\r\n                    return (\r\n                        <CVInput \r\n                            inputName={inputName}\r\n                            currentValue={inputInfo[0]}\r\n                            inputType={inputInfo[1]}\r\n                            labelContent={inputInfo[2]}\r\n                            placeholder={inputInfo[3]}\r\n                            key={inputName}\r\n                            inputChangeHandle={inputChangeHandle}\r\n                        />                 \r\n                    );\r\n                }) \r\n            }\r\n        </fieldset>\r\n    );\r\n}\r\n\r\nexport default DeletableFieldGroup;\r\n","import React from 'react';\r\nimport DeletableFieldGroup from './deletable-field-group';\r\n\r\nfunction CVDynamicFrom({fields, section, inputChangeHandle, fieldGroupCreate, fieldGroupDelete, formDisplay}) {\r\n \r\n    const displayForm = () => {\r\n        formDisplay(null);\r\n    }\r\n\r\n    function capitalizeFirstLetter(string) {\r\n        return string.charAt(0).toUpperCase() + string.slice(1);\r\n    }\r\n\r\n    function splitCamelCaseString(string) {\r\n        return string.split(/(?=[A-Z])/).join(' ')\r\n    }\r\n\r\n    function groupTheFields(fields) {\r\n        let groupedFields = [];\r\n\r\n        Object.keys(fields).forEach((field) => {\r\n            const groupNum = field.charAt(field.length - 1);\r\n            if (!groupedFields[groupNum]) {\r\n                groupedFields[groupNum] = {}\r\n            }\r\n            groupedFields[groupNum][field] = fields[field];\r\n        });\r\n\r\n        return groupedFields;\r\n    }\r\n\r\n    const createFieldGroup = (groupedFields) => {\r\n        // Creates new field group to add to state\r\n        const newGroup = {};\r\n        const newGroupNum = groupedFields.length;\r\n\r\n        const firstGroupCopy = {...groupedFields[0]};\r\n\r\n        Object.keys(firstGroupCopy).forEach((field) => {\r\n            // Copy field name, but with new groupNum, and copy inputInfo\r\n            const newFieldName = field.slice(0, -1) + newGroupNum;\r\n            newGroup[newFieldName] = firstGroupCopy[field];\r\n\r\n            // Clear input value of inputInfo\r\n            newGroup[newFieldName][0] = '';\r\n        })\r\n\r\n        fieldGroupCreate(newGroup);\r\n    }\r\n\r\n    const groupedFields = groupTheFields(fields)\r\n    const prettifiedSectionName = splitCamelCaseString(capitalizeFirstLetter(section));\r\n    return(\r\n        <div className=\"form-modal\">\r\n            <div className=\"form-container\">\r\n                <i \r\n                    className=\"bi bi-x-square close-form\"\r\n                    onClick={displayForm}\r\n                ></i>\r\n                <h2>{prettifiedSectionName}</h2>\r\n                <p className=\"mb-3\">(Unused fields will not show up on the CV)</p>\r\n                <form>\r\n                    {\r\n                        groupedFields.map((group, groupNum) => {\r\n                            return (\r\n                                <DeletableFieldGroup \r\n                                    fields={group}\r\n                                    groupNum={groupNum}\r\n                                    inputChangeHandle={inputChangeHandle}\r\n                                    fieldGroupDelete={fieldGroupDelete}\r\n                                    key={section + groupNum}\r\n                                />\r\n                            );\r\n                        })\r\n                    }\r\n                </form>\r\n                <div\r\n                    className=\"btn btn-outline-primary mb-3 create-field-group\"\r\n                    onClick={() => createFieldGroup(groupedFields)} >\r\n                    <i className=\"bi bi-plus-square add-icon\"></i>\r\n                    Add {prettifiedSectionName}\r\n                </div>\r\n                <br />\r\n                <button\r\n                    className=\"btn btn-primary\"\r\n                    onClick={displayForm}\r\n                    type=\"button\"\r\n                >Done</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CVDynamicFrom;","import React from 'react';\r\n\r\nfunction CVImageForm({section, imageChangeHandle, formDisplay}) {\r\n    \r\n    const displayForm = () => {\r\n        formDisplay(null);\r\n    }\r\n\r\n    function capitalizeFirstLetter(string) {\r\n        return string.charAt(0).toUpperCase() + string.slice(1);\r\n    }\r\n\r\n    const handleImageChange = (e) => {\r\n        e.preventDefault();\r\n\r\n        let reader = new FileReader();\r\n        let file = e.target.files[0];\r\n\r\n        reader.onloadend = () => {\r\n            imageChangeHandle(reader.result);\r\n        }\r\n\r\n        reader.readAsDataURL(file);\r\n    } \r\n    \r\n    return(\r\n        <div className=\"form-modal\">\r\n            <div className=\"form-container\">\r\n                <i \r\n                    className=\"bi bi-x-square close-form\"\r\n                    onClick={displayForm}\r\n                ></i>\r\n                <h2>{capitalizeFirstLetter(section)}</h2>\r\n                <form>\r\n                <div class=\"mb-3\">\r\n                    <label htmlFor=\"portait-file\" class=\"form-label mb-3\">(Recommended size {'\\u2248'} 400 x 400 pixels)</label>\r\n                    <input \r\n                        type=\"file\" \r\n                        className=\"form-control\"\r\n                        name=\"portrait-file\" \r\n                        id=\"portrait-file\" \r\n                        onChange={(e) => handleImageChange(e)}\r\n                    />\r\n                </div>\r\n                    <button\r\n                        className=\"btn btn-primary\"\r\n                        onClick={displayForm}\r\n                        type=\"button\"\r\n                    >Done</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CVImageForm;\r\n","import React, { useState, useRef, useEffect} from 'react';\r\nimport CV from './cv';\r\nimport Dashboard from './dashboard/dashboard';\r\n\r\n// Form imports\r\nimport CVForm from './user-info-forms/cv-form';\r\nimport CVDynamicFrom from './user-info-forms/cv-dynamic-form';\r\nimport CVImageForm from './user-info-forms/cv-image-form';\r\n\r\n// React to print\r\nimport { useReactToPrint } from 'react-to-print';\r\n\r\n// Theme hook\r\nimport { useTheme } from '../../theme/useTheme.jsx';\r\n\r\n// Styled-components\r\nimport styled from 'styled-components';\r\nimport { ThemeProvider } from 'styled-components';\r\n\r\n\r\nconst CVCreatorWrapper = styled.div`\r\n\tdisplay: flex;\r\n    background-color: #1e4356;\r\n    z-index: 10;\r\n`;\r\n\r\nconst Creator = styled.div`\r\n\tmargin: 120px auto 0 auto;\r\n    z-index: 5;\r\n    background-color: #1e4356b0;\r\n    border-radius: 8px;\r\n    box-shadow: 0 0 3px #ffffff4d;\r\n    text-align: center;\r\n`;\r\n\r\nfunction CVCreator(props) {\r\n\t// Ref used for ReactToPrint\r\n\tconst CVRef = useRef();\r\n\r\n\t// Pull from usedTheme hook, created needed local states\r\n\tconst {theme} = useTheme();\r\n\tconst [workingTheme, setWorkingTheme] = useState(theme);\r\n\t\r\n\tuseEffect(() => {\r\n\t\t// Working theme should be name New Theme when first loaded\r\n\t\tsetWorkingTheme({...theme, ...{name: 'New Theme'}});\r\n\t}, [theme]);\r\n\r\n\t// All user info is held here.\r\n\r\n\tconst [inputFields, setInputFields] = useState({\r\n\t\tcontact_phone: [null, 'tel', 'Phone', '555-555-5555'],\r\n\t\tcontact_email: [null, 'email', 'Email', 'email@me.com'],\r\n\t\tcontact_portfolio: [null, 'url', 'Portfolio', 'www.portfolio.com'],\r\n\t\tcontact_github: [null, 'url', 'Github', 'github.com/me'],\r\n\t\tcontact_linkedIn: [null, 'url', 'LinkedIn', ''],\r\n\t\tcontact_instagram: [null, 'url', 'Instagram', ''],\r\n\t\tcontact_youtube: [null, 'url', 'Youtube', ''],\r\n\t\tcontact_facebook: [null, 'url', 'Facebook', ''],\r\n\t\teducation_degree0: [null, 'text', 'Degree', 'Bachelors of a Field'],\r\n\t\teducation_institution0: [null, 'text', 'Institution', 'University of a State'],\r\n\t\teducation_timeToDegree0: [null, 'text', 'Time to Degree', '2014-2018'],\r\n\t\teducation_degree1: [null, 'text', 'Degree', 'Bachelors of a Field'],\r\n\t\teducation_institution1: [null, 'text', 'Institution', 'University of a State'],\r\n\t\teducation_timeToDegree1: [null, 'text', 'Time to Degree', '2014-2018'],\r\n\t\tskills_heading0: [null, 'text', 'Skill Heading', '/ / Technical'],\r\n\t\tskills_itemA0: [null, 'text', 'Skill', 'Making list items'],\r\n\t\tskills_itemB0: [null, 'text', 'Skill', 'Making list items'],\r\n\t\tskills_itemC0: [null, 'text', 'Skill', 'Making list items'],\r\n\t\tskills_itemD0: [null, 'text', 'Skill', 'Making list items'],\r\n\t\tskills_itemE0: [null, 'text', 'Skill', 'Making list items'],\r\n\t\tskills_itemF0: [null, 'text', 'Skill', 'Making list items'],\r\n\t\tskills_itemG0: [null, 'text', 'Skill', ''],\r\n\t\tskills_itemH0: [null, 'text', 'Skill', ''],\r\n\t\tskills_itemI0: [null, 'text', 'Skill', ''],\r\n\t\tskills_heading1: [null, 'text', 'Skill Heading', '/ / Soft'],\r\n\t\tskills_itemA1: [null, 'text', 'Skill', 'Being well liked'],\r\n\t\tskills_itemB1: [null, 'text', 'Skill', 'Being well liked'],\r\n\t\tskills_itemC1: [null, 'text', 'Skill', 'Being well liked'],\r\n\t\tskills_itemD1: [null, 'text', 'Skill', 'Being well liked'],\r\n\t\tskills_itemE1: [null, 'text', 'Skill', 'Being well liked'],\r\n\t\tskills_itemF1: [null, 'text', 'Skill', ''],\r\n\t\tskills_itemG1: [null, 'text', 'Skill', ''],\r\n\t\tskills_itemH1: [null, 'text', 'Skill', ''],\r\n\t\tintroduction_given: [null, 'text', 'First Name', 'Given'],\r\n\t\tintroduction_surname: [null, 'text', 'Last Name', 'Surname'],\r\n\t\tintroduction_title: [null, 'text', 'Professional Title', 'Professional Title'],\r\n\t\tintroduction_about: [null, 'textarea', 'About', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.'],\r\n\t\tworkExperience_company0: [null, 'text', 'Company', 'Company Name'],\r\n\t\tworkExperience_position0: [null, 'text', 'Position', '/ Position Title'],\r\n\t\tworkExperience_duration0: [null, 'text', 'Tenure', 'From 2018 to 2020'],\r\n\t\tworkExperience_summary0: [null, 'text', 'Position Summary', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod'],\r\n\t\tworkExperience_achievementA0: [null, 'text', 'Achievement', 'Made x money doing y things'],\r\n\t\tworkExperience_achievementB0: [null, 'text', 'Achievement', 'Made x money doing y things'],\r\n\t\tworkExperience_achievementC0: [null, 'text', 'Achievement', 'Made x money doing y things'],\r\n\t\tworkExperience_achievementD0: [null, 'text', 'Achievement', ''],\r\n\t\tworkExperience_achievementE0: [null, 'text', 'Achievement', ''],\r\n\t\tworkExperience_company1: [null, 'text', 'Company', 'Company Name'],\r\n\t\tworkExperience_position1: [null, 'text', 'Position', '/ Position Title'],\r\n\t\tworkExperience_duration1: [null, 'text', 'Tenure', 'From 2018 to 2020'],\r\n\t\tworkExperience_summary1: [null, 'text', 'Position Summary', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod'],\r\n\t\tworkExperience_achievementA1: [null, 'text', 'Achievement', 'Made x money doing y things'],\r\n\t\tworkExperience_achievementB1: [null, 'text', 'Achievement', 'Made x money doing y things'],\r\n\t\tworkExperience_achievementC1: [null, 'text', 'Achievement', 'Made x money doing y things'],\r\n\t\tworkExperience_achievementD1: [null, 'text', 'Achievement', ''],\r\n\t\tworkExperience_achievementE1: [null, 'text', 'Achievement', ''],\r\n\t\tworkExperience_achievementF1: [null, 'text', 'Achievement', ''],\r\n\t\tportrait_image: [''],\r\n\t});\r\n\r\n\t// Form Toggle\r\n\r\n\tconst [displayForm, setDisplayForm] = useState(null);\r\n\r\n\t// Event handlers\r\n\r\n\tconst handleThemeChange = (event) => {\r\n\t\tconst name = event.target.name;\r\n\t\tconst value = event.target.value;\r\n\r\n\t\tconst newInputObject = {[name]: value};\r\n\r\n\t\tsetWorkingTheme((prevState) => {\r\n\t\t\treturn {...prevState, ...newInputObject};\r\n\t\t});\r\n\t}\r\n\r\n\tconst handleInputChange = (event) => {\r\n\t\tconst name = event.target.name;\r\n\t\t\r\n\t\t// Convert empty string to null to remove unused fields\r\n\t\tlet value = event.target.value;\r\n\t\tif (value === '') {\r\n\t\t\tvalue = null;\r\n\t\t}\r\n\r\n\t\tlet inputField = inputFields[name].slice();\r\n\t\tinputField[0] = value;\r\n\t\t\r\n\t\tconst newInputObject = {[name]: inputField};\r\n\r\n\t\tsetInputFields((prevState) => {\r\n\t\t\treturn {...prevState, ...newInputObject};\r\n\t\t});\r\n\t}\r\n\r\n\tconst handleImageChange = (result) => {\r\n\t\tconst imageChangeObject = {portrait_image: [result]};\r\n\t\r\n\t\tsetInputFields((prevState) => {\r\n\t\t\treturn {...prevState, ...imageChangeObject};\r\n\t\t});\r\n\t}\r\n\r\n\tconst createFieldGroup = (group) => {\r\n\t\tsetInputFields((prevState) => {\r\n\t\t\treturn {...prevState, ...group}\r\n\t\t})\r\n\t}\r\n\r\n\tconst deleteFieldGroup = (fields) => {\r\n\t\tsetInputFields((prevState) => {\r\n\t\t\tconst newState = {...prevState};\r\n\t\t\t\r\n\t\t\tObject.keys(fields).forEach((field) => delete newState[field]);\r\n\r\n    \t\treturn newState;\r\n\t\t});\r\n\t}\r\n\r\n\tconst displaySectionForm = (section) => {\r\n\t\tsetDisplayForm(section);\r\n\t}\r\n\r\n\tconst handlePrint = useReactToPrint({\r\n\t\tcontent: () => CVRef.current,\r\n\t});\r\n\r\n\t// State distribution functions\r\n\r\n\tconst sortStateIntoSections = (inputFlds) => {\r\n\t\t/* {contact: {field1: [i, n, f, o], field2: [], ...}, education: {}, ...} */\r\n\t\tconst sectionSortedFields = {};\r\n\r\n\t\tObject.keys(inputFlds).forEach((key) => {\r\n\t\t\tconst underscoreIndex = key.indexOf('_');\r\n\t\t\t// Filter out non-section oriented states\r\n\t\t\tif (underscoreIndex === -1) return;\r\n\r\n\t\t\tconst section = key.slice(0, underscoreIndex);\r\n\t\t\r\n\t\t\tif (!sectionSortedFields[section]) {\r\n\t\t\t\tsectionSortedFields[section] = {};\r\n\t\t\t}\r\n\t\t\r\n\t\t\tsectionSortedFields[section][key] = inputFlds[key];\r\n\t\t});\r\n\r\n\t\treturn sectionSortedFields;\r\n\t}\r\n\r\n\tconst allInputValuesNull = (flds) => {\r\n\t\treturn Object.values(flds).every((inputInfo) => {\r\n\t\t\treturn inputInfo[0] === null;\r\n\t\t});\r\n\t}\r\n\r\n\tconst distillDisplayData = (sortedState) => {\r\n\t\t/* {contact: {field1: displayStr, field2: displayStr, ...}, education: {}, ...} */\r\n\t\tconst displayData = {}\r\n\t\tObject.keys(sortedState).forEach(section => {\r\n\t\t\tdisplayData[section] = {}\r\n\r\n\t\t\t/* When all field values are null, the cv is populated\r\n\t\t\tby the placeholder text instead of the input. This provides \r\n\t\t\ta readily available design guide for the template.\r\n\t\t\t*/\r\n\t\t\tconst inputValuesNull = allInputValuesNull(sortedState[section]);\r\n\t\t\tconst displayIndex = inputValuesNull ? 3 : 0;\r\n\r\n\t\t\tObject.keys(sortedState[section]).forEach((field) => { \r\n\t\t\tdisplayData[section][field] = sortedState[section][field][displayIndex];\r\n\t\t\t})\r\n\t\t})\r\n\t\treturn displayData;\r\n\t}\r\n\r\n\tconst getFormType = (section) => {\r\n\t\tif (section === null) return null;\r\n\r\n        const dynamicSections = [\r\n\t\t\t'skills',\r\n            'education',\r\n\t\t\t'workExperience',\r\n        ];\r\n\r\n\t\tif (dynamicSections.includes(section)) {\r\n\t\t\treturn 'dynamic';\r\n\t\t} else if (section === 'portrait') {\r\n\t\t\treturn 'image';\r\n\t\t} else {\r\n\t\t\treturn 'form';\r\n\t\t}\r\n    }\r\n\r\n\t\r\n\tconst sectionedFields = sortStateIntoSections(inputFields);\r\n\tconst displayData = distillDisplayData(sectionedFields);\r\n\tconst formType = getFormType(displayForm);\r\n\r\n\treturn (\r\n\t\t<CVCreatorWrapper>\r\n\t\t\t<Creator>\r\n\t\t\t\t<ThemeProvider theme={workingTheme}>\r\n\t\t\t\t\t<Dashboard \r\n\t\t\t\t\tprintHandle={handlePrint} \r\n\t\t\t\t\tworkingThemeSet={setWorkingTheme}\r\n\t\t\t\t\tthemeChangeHandle={handleThemeChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<CV \r\n\t\t\t\t\t\tportrait={displayData.portrait}\r\n\t\t\t\t\t\tcontact={displayData.contact}\r\n\t\t\t\t\t\teducation={displayData.education}\r\n\t\t\t\t\t\tskills={displayData.skills}\r\n\t\t\t\t\t\tintroduction={displayData.introduction}\r\n\t\t\t\t\t\tworkExperience={displayData.workExperience}\r\n\t\t\t\t\t\tformDisplay={displaySectionForm}\r\n\t\t\t\t\t\tref={CVRef}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</ThemeProvider>\r\n\t\t\t\t{formType === 'form' &&\r\n\t\t\t\t\t<CVForm \r\n\t\t\t\t\t\tfields={sectionedFields[displayForm]}\r\n\t\t\t\t\t\tsection={displayForm} \r\n\t\t\t\t\t\tinputChangeHandle={handleInputChange}\r\n\t\t\t\t\t\tformDisplay={displaySectionForm}\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\t{formType === 'dynamic' &&\r\n\t\t\t\t\t<CVDynamicFrom \r\n\t\t\t\t\t\tfields={sectionedFields[displayForm]}\r\n\t\t\t\t\t\tsection={displayForm} \r\n\t\t\t\t\t\tinputChangeHandle={handleInputChange}\r\n\t\t\t\t\t\tformDisplay={displaySectionForm}\r\n\t\t\t\t\t\tfieldGroupDelete={deleteFieldGroup}\r\n\t\t\t\t\t\tfieldGroupCreate={createFieldGroup}\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\t{formType === 'image' &&\r\n\t\t\t\t\t<CVImageForm \r\n\t\t\t\t\t\tsection={displayForm} \r\n\t\t\t\t\t\timageChangeHandle={handleImageChange}\r\n\t\t\t\t\t\tformDisplay={displaySectionForm}\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t</Creator>\r\n\t\t</CVCreatorWrapper>\r\n\t);\r\n\t\r\n}\r\n\r\nexport default CVCreator;","import React from 'react';\r\n\r\nfunction Header(props) {\r\n    return (\r\n        <header id=\"header\" className=\"d-flex align-items-center header-transparent\">\r\n            <div className=\"container d-flex justify-content-between align-items-center\">\r\n                <div className=\"logo\">\r\n                    <h1 className=\"text-light\"><span>CVCreator</span></h1>\r\n                </div>\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nfunction Hero(props) {\r\n    return (\r\n        <section id=\"hero\" className=\"d-flex justify-cntent-center align-items-center\">\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Hero;","import React from 'react';\r\n\r\nfunction Footer(props) {\r\n    return (\r\n        <footer>\r\n            <div className=\"footer-top\"></div>\r\n            <div className=\"copyright\">\r\n                &copy; Copyright <strong><span>Joshua Aldridge</span></strong>. All Rights Reserved\r\n            </div>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","import CVCreator from './components/cv/cv-creator';\nimport Header from './components/header';\nimport Hero from './components/hero';\nimport Footer from './components/footer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Hero />\n      <CVCreator />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles/cv.scss';\n\nimport * as themes from './theme/schema.json';\nimport * as allFonts from './theme/allFonts.json';\nimport { setToLS } from './utils/storage';\n\nconst Index = () => {\n  setToLS('all-themes', themes.default);\n  setToLS('all-fonts', allFonts.default);\n  return(\n    <App />\n  );\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Index />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}