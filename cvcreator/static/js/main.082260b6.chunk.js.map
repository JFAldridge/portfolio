{"version":3,"sources":["components/cv/display/portrait.jsx","components/cv/display/contact.jsx","components/cv/display/education.jsx","components/cv/display/skills.jsx","components/cv/display/introduction.jsx","components/cv/display/work-experience.jsx","components/cv/cv.jsx","components/cv/form/cv-input.jsx","components/cv/form/cv-form.jsx","components/cv/form/deletable-field-group.jsx","components/cv/form/cv-dynamic-form.jsx","components/cv/form/cv-image-form.jsx","components/cv/cv-creator.jsx","components/header.jsx","components/hero.jsx","components/footer.jsx","App.js","index.js"],"names":["Portrait","fields","formDisplay","useState","displayEditIcon","setDisplayEditIcon","editIconContainer","useRef","console","log","portrait_image","className","onMouseEnter","onMouseLeave","CSSTransition","nodeRef","in","timeout","classNames","unmountOnExit","ref","onClick","src","alt","ContactItem","type","value","contact_phone","contact_email","contact_portfolio","contact_github","contact_linkedIn","contact_instagram","contact_youtube","contact_facebook","getIconClass","Contact","Object","entries","map","key","inputInfo","InstitutionDiv","degree","institution","timeToDegree","Education","numberIdentifiers","keys","charAt","length","sort","Set","getFieldGroupNumbers","groupNum","degreeInfo","institutionInfo","timeToDegreeInfo","SkillGroup","fieldGroup","listItems","forEach","field","listItemIdentifier","toUpperCase","listItem","push","winnowAndSortListitems","Skills","groupedFields","groupTheFields","group","i","Introduction","introduction_given","introduction_surname","introduction_title","introduction_about","Position","WorkExperience","CV","this","props","portrait","contact","education","skills","introduction","workExperience","React","Component","CVInput","inputName","currentValue","inputType","labelContent","inputChangeHandle","placeholder","handleInputChange","event","id","name","rows","cols","onChange","htmlFor","CVForm","string","section","displayForm","slice","DeletableFieldGroup","fieldGroupDelete","CVDynamicFrom","fieldGroupCreate","prettifiedSectionName","split","join","splitCamelCaseString","newGroup","newGroupNum","firstGroupCopy","newFieldName","createFieldGroup","CVImageForm","imageChangeHandle","e","preventDefault","reader","FileReader","file","target","files","onloadend","result","readAsDataURL","handleImageChange","CVCreator","CVRef","education_degree0","education_institution0","education_timeToDegree0","education_degree1","education_institution1","education_timeToDegree1","skills_heading0","skills_itemA0","skills_itemB0","skills_itemC0","skills_itemD0","skills_itemE0","skills_itemF0","skills_itemG0","skills_itemH0","skills_itemI0","skills_heading1","skills_itemA1","skills_itemB1","skills_itemC1","skills_itemD1","skills_itemE1","skills_itemF1","skills_itemG1","skills_itemH1","workExperience_company0","workExperience_position0","workExperience_duration0","workExperience_summary0","workExperience_achievementA0","workExperience_achievementB0","workExperience_achievementC0","workExperience_achievementD0","workExperience_achievementE0","workExperience_company1","workExperience_position1","workExperience_duration1","workExperience_summary1","workExperience_achievementA1","workExperience_achievementB1","workExperience_achievementC1","workExperience_achievementD1","workExperience_achievementE1","workExperience_achievementF1","inputFields","setInputFields","setDisplayForm","inputField","newInputObject","prevState","displaySectionForm","handlePrint","useReactToPrint","content","current","sectionedFields","inputFlds","sectionSortedFields","underscoreIndex","indexOf","sortStateIntoSections","displayData","sortedState","flds","displayIndex","values","every","distillDisplayData","formType","includes","getFormType","newState","imageChangeObject","Header","Hero","Footer","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.082260b6.chunk.js","sourcesContent":["import React, {useState, useRef} from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nfunction Portrait({fields, formDisplay}) {\r\n    const [displayEditIcon, setDisplayEditIcon] = useState(false);\r\n    const editIconContainer = useRef(null);\r\n\r\n    const displayForm = () => {\r\n\t\tformDisplay('portrait');\r\n\t}\r\n\r\n    console.log(fields.portrait_image)\r\n\r\n    return (\r\n        <section \r\n            className=\"portrait-container\"\r\n            onMouseEnter={() => setDisplayEditIcon(true)}\r\n            onMouseLeave={() => setDisplayEditIcon(false)}\r\n        >\r\n            <CSSTransition \r\n                nodeRef={editIconContainer}\r\n                in={displayEditIcon}\r\n                timeout={300}\r\n                classNames=\"edit-icon\"\r\n                unmountOnExit\r\n            >\r\n                <div className=\"edit-icon-container\" ref={editIconContainer}>\r\n                    <i \r\n                        className=\"bi bi-pencil-square edit-section\"\r\n                        onClick={displayForm}\r\n                    ></i>\r\n                </div>\r\n            </CSSTransition>\r\n            <div className=\"portrait\">\r\n                {fields.portrait_image !== '' &&\r\n                    <img src={fields.portrait_image} alt=\"Portrait\" />}\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Portrait;","import React, {useState, useRef} from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nfunction ContactItem({type, value}) {\r\n\r\n\tconst getIconClass = (type) => {\r\n\t\tconst iconClasses = {\r\n\t\t\tcontact_phone: \"bi bi-telephone-fill\",\r\n\t\t\tcontact_email: \"bi bi-envelope-fill\",\r\n\t\t\tcontact_portfolio: \"bi bi-border-style\",\r\n\t\t\tcontact_github: \"bi bi-github\",\r\n\t\t\tcontact_linkedIn: \"bi bi-linkedin\",\r\n\t\t\tcontact_instagram: \"bi bi-instagram\",\r\n\t\t\tcontact_youtube: \"bi bi-youtube\",\r\n\t\t\tcontact_facebook: \"bi bi-facebook\",\r\n\t\t};\r\n\r\n\t\treturn iconClasses[type];\r\n\t}\r\n\t\r\n\tif (value === null || value === '') return null;\r\n\r\n\treturn (\r\n\t\t<li className=\"contact-item\">\r\n\t\t\t<i className={getIconClass(type)}></i>\r\n\t\t\t{value}\r\n\t\t</li>\r\n\t);\t\r\n\t\r\n}\r\n\r\nfunction Contact({fields, formDisplay}) {\r\n\tconst [displayEditIcon, setDisplayEditIcon] = useState(false);\r\n    const editIconContainer = useRef(null);\r\n\r\n\tconst displayForm = () => {\r\n\t\tformDisplay('contact');\r\n\t}\r\n\r\n\treturn (\r\n\t\t<section \r\n\t\t\tclassName=\"contact\"\r\n\t\t\tonMouseEnter={() => setDisplayEditIcon(true)}\r\n            onMouseLeave={() => setDisplayEditIcon(false)}\r\n\t\t>\r\n\t\t\t<CSSTransition \r\n                nodeRef={editIconContainer}\r\n                in={displayEditIcon}\r\n                timeout={300}\r\n                classNames=\"edit-icon\"\r\n                unmountOnExit\r\n            >\r\n                <div className=\"edit-icon-container\" ref={editIconContainer}>\r\n                    <i \r\n                        className=\"bi bi-pencil-square edit-section\"\r\n                        onClick={displayForm}\r\n                    ></i>\r\n                </div>\r\n            </CSSTransition>\r\n\t\t\t<h2>Contact</h2>\r\n\t\t\t<ul className=\"contact-list\">\r\n\t\t\t\t{ Object.entries(fields).map(([key, inputInfo]) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<ContactItem \r\n\t\t\t\t\t\t\ttype={key}\r\n\t\t\t\t\t\t\tvalue={(inputInfo)}\r\n\t\t\t\t\t\t\tkey={key}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</ul>\r\n\t\t</section>\r\n\t);\r\n}\r\n\r\nexport default Contact;","import React, {useState, useRef} from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nfunction InstitutionDiv({degree, institution, timeToDegree}) {\r\n    return (\r\n        <div className=\"institution\">\r\n            <h4>{degree}</h4>\r\n            <p>{institution}</p>\r\n            <p>{timeToDegree}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction Education({fields, formDisplay}) {   \r\n    const [displayEditIcon, setDisplayEditIcon] = useState(false);\r\n    const editIconContainer = useRef(null);\r\n\r\n    const getFieldGroupNumbers = () => {\r\n        const numberIdentifiers = Object.keys(fields).map((key) => key.charAt(key.length - 1)).sort();\r\n        const uniqueIdentifiers = [...new Set(numberIdentifiers)];\r\n        return uniqueIdentifiers;\r\n    }\r\n\r\n    const displayForm = () => {\r\n\t\tformDisplay('education');\r\n\t}\r\n\r\n    return (\r\n        <section \r\n            className=\"education\"\r\n            onMouseEnter={() => setDisplayEditIcon(true)}\r\n            onMouseLeave={() => setDisplayEditIcon(false)}\r\n        >\r\n            <CSSTransition \r\n                nodeRef={editIconContainer}\r\n                in={displayEditIcon}\r\n                timeout={300}\r\n                classNames=\"edit-icon\"\r\n                unmountOnExit\r\n            >\r\n                <div className=\"edit-icon-container\" ref={editIconContainer}>\r\n                    <i \r\n                        className=\"bi bi-pencil-square edit-section\"\r\n                        onClick={displayForm}\r\n                    ></i>\r\n                </div>\r\n            </CSSTransition>\r\n            <h2>Education</h2>\r\n                {\r\n                    getFieldGroupNumbers().map((groupNum) => {\r\n                        const degreeInfo = fields['education_degree' + groupNum];\r\n                        const institutionInfo = fields['education_institution' + groupNum];\r\n                        const timeToDegreeInfo = fields['education_timeToDegree' + groupNum];\r\n\r\n                        return (\r\n                            <InstitutionDiv \r\n                                degree={degreeInfo}\r\n                                institution={institutionInfo}\r\n                                timeToDegree={timeToDegreeInfo}\r\n                                key={degreeInfo + groupNum}\r\n                            />\r\n                        );\r\n                    })\r\n                }\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Education;","import React, {useState, useRef} from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nfunction SkillGroup({fieldGroup, groupNum}) {\r\n    \r\n    function winnowAndSortListitems(fields) {\r\n        let listItems = [];\r\n\r\n        Object.keys(fields).forEach((field) => {\r\n            const listItemIdentifier = field.charAt(field.length - 2);\r\n            if (listItemIdentifier === listItemIdentifier.toUpperCase()) {\r\n                const listItem = fieldGroup[field];\r\n\r\n                if (listItem !== null && listItem !== '') {\r\n                    listItems.push(<li key={listItemIdentifier}>{listItem}</li>);\r\n                }\r\n            }\r\n        });\r\n\r\n        const sortedListItems = listItems.sort()\r\n        return sortedListItems;\r\n    }\r\n\r\n    return (\r\n\t\t<div className=\"skill-list-container\">\r\n\t\t\t<h4>{fieldGroup['skills_heading' + groupNum]}</h4>\r\n\t\t\t<ul className=\"skill-list\">\r\n\t\t\t\t{winnowAndSortListitems(fieldGroup)}\r\n\t\t\t</ul>\r\n\t\t</div>\r\n    );\r\n}\r\n\r\nfunction Skills({fields, formDisplay}) {\r\n\tconst [displayEditIcon, setDisplayEditIcon] = useState(false);\r\n    const editIconContainer = useRef(null);\r\n\r\n\tconst displayForm = () => {\r\n\t\tformDisplay('skills');\r\n\t}\r\n\r\n\tfunction groupTheFields(fields) {\r\n        let groupedFields = [];\r\n\r\n        Object.keys(fields).forEach((field) => {\r\n            const groupNum = field.charAt(field.length - 1);\r\n            if (!groupedFields[groupNum]) {\r\n                groupedFields[groupNum] = {}\r\n            }\r\n            groupedFields[groupNum][field] = fields[field];\r\n        });\r\n\r\n        return groupedFields;\r\n    }\r\n\r\n    return (\r\n        <section \r\n\t\t\tclassName=\"skills\"\r\n\t\t\tonMouseEnter={() => setDisplayEditIcon(true)}\r\n            onMouseLeave={() => setDisplayEditIcon(false)}\r\n\t\t>\r\n\t\t\t<CSSTransition \r\n                nodeRef={editIconContainer}\r\n                in={displayEditIcon}\r\n                timeout={300}\r\n                classNames=\"edit-icon\"\r\n                unmountOnExit\r\n            >\r\n                <div className=\"edit-icon-container\" ref={editIconContainer}>\r\n                    <i \r\n                        className=\"bi bi-pencil-square edit-section\"\r\n                        onClick={displayForm}\r\n                    ></i>\r\n                </div>\r\n            </CSSTransition>\r\n            <h2>Skills</h2>\r\n\t\t\t\t{\r\n                    groupTheFields(fields).map((group, i) => {\r\n                        return (\r\n                            <SkillGroup \r\n                                fieldGroup={group}\r\n                                groupNum={i}\r\n                                key={i}\r\n                            />\r\n                        );\r\n                    })\r\n                }\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Skills;","import React, {useState, useRef} from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nfunction Introduction({fields, formDisplay}) {\r\n    const [displayEditIcon, setDisplayEditIcon] = useState(false);\r\n    const editIconContainer = useRef(null);\r\n\r\n    const displayForm = () => {\r\n\t\tformDisplay('introduction');\r\n\t}\r\n\r\n    return (\r\n        <section \r\n            className=\"introduction\"\r\n            onMouseEnter={() => setDisplayEditIcon(true)}\r\n            onMouseLeave={() => setDisplayEditIcon(false)}\r\n        >\r\n            <CSSTransition \r\n                nodeRef={editIconContainer}\r\n                in={displayEditIcon}\r\n                timeout={300}\r\n                classNames=\"edit-icon\"\r\n                unmountOnExit\r\n            >\r\n                <div className=\"edit-icon-container\" ref={editIconContainer}>\r\n                    <i \r\n                        className=\"bi bi-pencil-square edit-section\"\r\n                        onClick={displayForm}\r\n                    ></i>\r\n                </div>\r\n            </CSSTransition>\r\n            <h1 className=\"name\">\r\n                <span className=\"first-name\">{fields.introduction_given}</span>\r\n                <span className=\"second-name\">{fields.introduction_surname}</span>\r\n            </h1>\r\n            <h4 className=\"professional-title\">{fields.introduction_title}</h4>\r\n            <p className=\"about\">{fields.introduction_about}</p>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Introduction;","import React, {useState, useRef} from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nfunction Position({fieldGroup, groupNum}) {\r\n    \r\n    function winnowAndSortListitems(fields) {\r\n        let listItems = [];\r\n\r\n        Object.keys(fields).forEach((field) => {\r\n            const listItemIdentifier = field.charAt(field.length - 2);\r\n            if (listItemIdentifier === listItemIdentifier.toUpperCase()) {\r\n                const listItem = fieldGroup[field];\r\n\r\n                if (listItem !== null && listItem !== '') {\r\n                    listItems.push(<li key={listItemIdentifier}>{listItem}</li>);\r\n                }\r\n            }\r\n        });\r\n\r\n        const sortedListItems = listItems.sort()\r\n        return sortedListItems;\r\n    }\r\n\r\n    return (\r\n        <div className=\"position\">\r\n            <h4 className=\"company\">{fieldGroup['workExperience_company' + groupNum]} <span className=\"position\">{fieldGroup['workExperience_position' + groupNum]}</span></h4>\r\n            <p className=\"duration\">{fieldGroup['workExperience_duration' + groupNum]}</p>\r\n            <p className=\"position-summary\">{fieldGroup['workExperience_summary' + groupNum]}</p>\r\n            <ul className=\"achievements\">\r\n                {winnowAndSortListitems(fieldGroup)}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction WorkExperience({fields, formDisplay}) {\r\n    const [displayEditIcon, setDisplayEditIcon] = useState(false);\r\n    const editIconContainer = useRef(null);\r\n\r\n    function groupTheFields(fields) {\r\n        let groupedFields = [];\r\n\r\n        Object.keys(fields).forEach((field) => {\r\n            const groupNum = field.charAt(field.length - 1);\r\n            if (!groupedFields[groupNum]) {\r\n                groupedFields[groupNum] = {}\r\n            }\r\n            groupedFields[groupNum][field] = fields[field];\r\n        });\r\n\r\n        return groupedFields;\r\n    }\r\n\r\n    const displayForm = () => {\r\n\t\tformDisplay('workExperience');\r\n\t}\r\n\r\n    return (\r\n        <section \r\n            className=\"work-experience\"\r\n            onMouseEnter={() => setDisplayEditIcon(true)}\r\n            onMouseLeave={() => setDisplayEditIcon(false)}\r\n        >\r\n            <CSSTransition \r\n                nodeRef={editIconContainer}\r\n                in={displayEditIcon}\r\n                timeout={300}\r\n                classNames=\"edit-icon\"\r\n                unmountOnExit\r\n            >\r\n                <div className=\"edit-icon-container\" ref={editIconContainer}>\r\n                    <i \r\n                        className=\"bi bi-pencil-square edit-section\"\r\n                        onClick={displayForm}\r\n                    ></i>\r\n                </div>\r\n            </CSSTransition>\r\n            <h2>Work Expierence</h2>\r\n                {\r\n                    groupTheFields(fields).map((group, i) => {\r\n                        return (\r\n                            <Position \r\n                                fieldGroup={group}\r\n                                groupNum={i}\r\n                                key={i}\r\n                            />\r\n                        );\r\n                    })\r\n                }\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default WorkExperience;","import React from 'react';\r\nimport Portrait from './display/portrait';\r\nimport Contact from './display/contact';\r\nimport Education from './display/education';\r\nimport Skills from './display/skills';\r\nimport Introduction from './display/introduction';\r\nimport WorkExperience from './display/work-experience';\r\n\r\n//react-to-print only prints class components\r\n\r\nclass CV extends React.Component {\r\n\trender() {\r\n\t\tconst {portrait, contact, education, skills, introduction, workExperience, formDisplay} = this.props;\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"resume\">\r\n\t\t\t\t<div className=\"sidebar\">\r\n\t\t\t\t\t<Portrait \r\n\t\t\t\t\t\tfields={portrait}\r\n\t\t\t\t\t\tformDisplay={formDisplay}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Contact \r\n\t\t\t\t\t\tfields={contact}\r\n\t\t\t\t\t\tformDisplay={formDisplay}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Education \r\n\t\t\t\t\t\tfields={education}\r\n\t\t\t\t\t\tformDisplay={formDisplay}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Skills \r\n\t\t\t\t\t\tfields={skills}\r\n\t\t\t\t\t\tformDisplay={formDisplay}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"main-content\">\r\n\t\t\t\t\t<Introduction \r\n\t\t\t\t\t\tfields={introduction}\r\n\t\t\t\t\t\tformDisplay={formDisplay}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<WorkExperience \r\n\t\t\t\t\t\tfields={workExperience}\r\n\t\t\t\t\t\tformDisplay={formDisplay}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t\r\n\t}\r\n}\r\n\r\nexport default CV;","import React from \"react\";\r\n\r\nfunction CVInput( {inputName, currentValue, inputType, labelContent, placeholder, inputChangeHandle} ) {\r\n    \r\n    const handleInputChange = (event) => {\r\n        inputChangeHandle(event);\r\n    }\r\n\r\n    return (\r\n        <div className=\"form-floating mb-3\">\r\n            {inputType === 'textarea' \r\n            ? <textarea \r\n                id={inputName}\r\n                name={inputName}\r\n                value={currentValue || ''}\r\n                type={inputType} \r\n                className=\"form-control mb-3 text-area\"\r\n                rows=\"6\"\r\n                cols=\"40\"\r\n                onChange={handleInputChange}\r\n            ></textarea>\r\n            : <input \r\n                id={inputName}\r\n                name={inputName}\r\n                value={currentValue || ''}\r\n                type={inputType} \r\n                className=\"form-control mb-3\"\r\n                onChange={handleInputChange}\r\n            />\r\n            }\r\n            <label \r\n                htmlFor={inputName} \r\n                className=\"form-label\">\r\n                {labelContent}\r\n            </label>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CVInput;","import React from 'react';\r\nimport CVInput from './cv-input';\r\n\r\nfunction CVForm({fields, section, inputChangeHandle, formDisplay}) {\r\n \r\n    const displayForm = () => {\r\n        formDisplay(null);\r\n    }\r\n\r\n    function capitalizeFirstLetter(string) {\r\n        return string.charAt(0).toUpperCase() + string.slice(1);\r\n    }\r\n\r\n    return(\r\n        <div className=\"form-modal\">\r\n            <div className=\"form-container\">\r\n                <i \r\n                    className=\"bi bi-x-square close-form\"\r\n                    onClick={displayForm}\r\n                ></i>\r\n                <h2>{capitalizeFirstLetter(section)}</h2>\r\n                <p className=\"from-text mb-3\">(Unused fields will not show up on the CV)</p>\r\n                <form>\r\n                    {\r\n                        Object.entries(fields).map(([inputName, inputInfo]) => {\r\n                            return (\r\n                                <CVInput \r\n                                    inputName={inputName}\r\n                                    currentValue={inputInfo[0]}\r\n                                    inputType={inputInfo[1]}\r\n                                    labelContent={inputInfo[2]}\r\n                                    placeholder={inputInfo[3]}\r\n                                    key={inputName}\r\n                                    inputChangeHandle={inputChangeHandle}\r\n                                />                 \r\n                            );\r\n                        }) \r\n                    }\r\n                    <button\r\n                        className=\"btn btn-primary\"\r\n                        onClick={displayForm}\r\n                        type=\"button\"\r\n                    >Done</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CVForm;","import React from 'react';\r\nimport CVInput from './cv-input';\r\n\r\nfunction DeletableFieldGroup({fields, groupNum, inputChangeHandle, fieldGroupDelete}) {\r\n\r\n    const deleteFieldGroup = () => {\r\n        fieldGroupDelete(fields)\r\n    }\r\n        \r\n    return (\r\n        <fieldset>\r\n            {groupNum > 0 &&\r\n            <i \r\n                className=\"bi bi-x-square close-input-group\"\r\n                onClick={() => deleteFieldGroup()}\r\n            ></i> }  \r\n            {\r\n                Object.entries(fields).map(([inputName, inputInfo]) => {\r\n                    return (\r\n                        <CVInput \r\n                            inputName={inputName}\r\n                            currentValue={inputInfo[0]}\r\n                            inputType={inputInfo[1]}\r\n                            labelContent={inputInfo[2]}\r\n                            placeholder={inputInfo[3]}\r\n                            key={inputName}\r\n                            inputChangeHandle={inputChangeHandle}\r\n                        />                 \r\n                    );\r\n                }) \r\n            }\r\n        </fieldset>\r\n    );\r\n}\r\n\r\nexport default DeletableFieldGroup;\r\n","import React from 'react';\r\nimport DeletableFieldGroup from './deletable-field-group';\r\n\r\nfunction CVDynamicFrom({fields, section, inputChangeHandle, fieldGroupCreate, fieldGroupDelete, formDisplay}) {\r\n \r\n    const displayForm = () => {\r\n        formDisplay(null);\r\n    }\r\n\r\n    function capitalizeFirstLetter(string) {\r\n        return string.charAt(0).toUpperCase() + string.slice(1);\r\n    }\r\n\r\n    function splitCamelCaseString(string) {\r\n        return string.split(/(?=[A-Z])/).join(' ')\r\n    }\r\n\r\n    function groupTheFields(fields) {\r\n        let groupedFields = [];\r\n\r\n        Object.keys(fields).forEach((field) => {\r\n            const groupNum = field.charAt(field.length - 1);\r\n            if (!groupedFields[groupNum]) {\r\n                groupedFields[groupNum] = {}\r\n            }\r\n            groupedFields[groupNum][field] = fields[field];\r\n        });\r\n\r\n        return groupedFields;\r\n    }\r\n\r\n    const createFieldGroup = (groupedFields) => {\r\n        // Creates new field group to add to state\r\n        const newGroup = {};\r\n        const newGroupNum = groupedFields.length;\r\n\r\n        const firstGroupCopy = {...groupedFields[0]};\r\n\r\n        Object.keys(firstGroupCopy).forEach((field) => {\r\n            // Copy field name, but with new groupNum, and copy inputInfo\r\n            const newFieldName = field.slice(0, -1) + newGroupNum;\r\n            newGroup[newFieldName] = firstGroupCopy[field];\r\n\r\n            // Clear input value of inputInfo\r\n            newGroup[newFieldName][0] = '';\r\n        })\r\n\r\n        fieldGroupCreate(newGroup);\r\n    }\r\n\r\n    const groupedFields = groupTheFields(fields)\r\n    const prettifiedSectionName = splitCamelCaseString(capitalizeFirstLetter(section));\r\n    return(\r\n        <div className=\"form-modal\">\r\n            <div className=\"form-container\">\r\n                <i \r\n                    className=\"bi bi-x-square close-form\"\r\n                    onClick={displayForm}\r\n                ></i>\r\n                <h2>{prettifiedSectionName}</h2>\r\n                <p className=\"from-text mb-3\">(Unused fields will not show up on the CV)</p>\r\n                <form>\r\n                    {\r\n                        groupedFields.map((group, groupNum) => {\r\n                            return (\r\n                                <DeletableFieldGroup \r\n                                    fields={group}\r\n                                    groupNum={groupNum}\r\n                                    inputChangeHandle={inputChangeHandle}\r\n                                    fieldGroupDelete={fieldGroupDelete}\r\n                                    key={section + groupNum}\r\n                                />\r\n                            );\r\n                        })\r\n                    }\r\n                </form>\r\n                <div\r\n                    className=\"btn btn-outline-primary mb-3 create-field-group\"\r\n                    onClick={() => createFieldGroup(groupedFields)} >\r\n                    <i className=\"bi bi-plus-square add-icon\"></i>\r\n                    Add {prettifiedSectionName}\r\n                </div>\r\n                <br />\r\n                <button\r\n                    className=\"btn btn-primary\"\r\n                    onClick={displayForm}\r\n                    type=\"button\"\r\n                >Done</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CVDynamicFrom;","import React from 'react';\r\n\r\nfunction CVImageForm({section, imageChangeHandle, formDisplay}) {\r\n    \r\n    const displayForm = () => {\r\n        formDisplay(null);\r\n    }\r\n\r\n    function capitalizeFirstLetter(string) {\r\n        return string.charAt(0).toUpperCase() + string.slice(1);\r\n    }\r\n\r\n    const handleImageChange = (e) => {\r\n        e.preventDefault();\r\n\r\n        let reader = new FileReader();\r\n        let file = e.target.files[0];\r\n\r\n        reader.onloadend = () => {\r\n            imageChangeHandle(reader.result);\r\n        }\r\n\r\n        reader.readAsDataURL(file);\r\n    } \r\n    \r\n    return(\r\n        <div className=\"form-modal\">\r\n            <div className=\"form-container\">\r\n                <i \r\n                    className=\"bi bi-x-square close-form\"\r\n                    onClick={displayForm}\r\n                ></i>\r\n                <h2>{capitalizeFirstLetter(section)}</h2>\r\n                <form>\r\n                    <input \r\n                        type=\"file\" \r\n                        name=\"portrait-file\" \r\n                        id=\"portrai-file\" \r\n                        onChange={(e) => handleImageChange(e)}\r\n                    />\r\n                    <button\r\n                        className=\"btn btn-primary\"\r\n                        onClick={displayForm}\r\n                        type=\"button\"\r\n                    >Done</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CVImageForm;\r\n","import React, { useState, useRef } from 'react';\r\nimport { useReactToPrint } from 'react-to-print';\r\nimport CV from './cv';\r\nimport CVForm from './form/cv-form';\r\nimport CVDynamicFrom from './form/cv-dynamic-form';\r\nimport CVImageForm from './form/cv-image-form';\r\n\r\nfunction CVCreator(props) {\r\n\t// Ref used for ReactToPrint\r\n\tconst CVRef = useRef();\r\n\r\n\t// All user info is held here.\r\n\r\n\tconst [inputFields, setInputFields] = useState({\r\n\t\tcontact_phone: [null, 'tel', 'Phone', '555-555-5555'],\r\n\t\tcontact_email: [null, 'email', 'Email', 'email@me.com'],\r\n\t\tcontact_portfolio: [null, 'url', 'Portfolio', 'www.portfolio.com'],\r\n\t\tcontact_github: [null, 'url', 'Github', 'github.com/me'],\r\n\t\tcontact_linkedIn: [null, 'url', 'LinkedIn', ''],\r\n\t\tcontact_instagram: [null, 'url', 'Instagram', ''],\r\n\t\tcontact_youtube: [null, 'url', 'Youtube', ''],\r\n\t\tcontact_facebook: [null, 'url', 'Facebook', ''],\r\n\t\teducation_degree0: [null, 'text', 'Degree', 'Bachelors of a Field'],\r\n\t\teducation_institution0: [null, 'text', 'Institution', 'University of a State'],\r\n\t\teducation_timeToDegree0: [null, 'text', 'Time to Degree', '2014-2018'],\r\n\t\teducation_degree1: [null, 'text', 'Degree', 'Bachelors of a Field'],\r\n\t\teducation_institution1: [null, 'text', 'Institution', 'University of a State'],\r\n\t\teducation_timeToDegree1: [null, 'text', 'Time to Degree', '2014-2018'],\r\n\t\tskills_heading0: [null, 'text', 'Skill Heading', '/ / Technical'],\r\n\t\tskills_itemA0: [null, 'text', 'Skill', 'Making list items'],\r\n\t\tskills_itemB0: [null, 'text', 'Skill', 'Making list items'],\r\n\t\tskills_itemC0: [null, 'text', 'Skill', 'Making list items'],\r\n\t\tskills_itemD0: [null, 'text', 'Skill', 'Making list items'],\r\n\t\tskills_itemE0: [null, 'text', 'Skill', 'Making list items'],\r\n\t\tskills_itemF0: [null, 'text', 'Skill', 'Making list items'],\r\n\t\tskills_itemG0: [null, 'text', 'Skill', ''],\r\n\t\tskills_itemH0: [null, 'text', 'Skill', ''],\r\n\t\tskills_itemI0: [null, 'text', 'Skill', ''],\r\n\t\tskills_heading1: [null, 'text', 'Skill Heading', '/ / Soft'],\r\n\t\tskills_itemA1: [null, 'text', 'Skill', 'Being well liked'],\r\n\t\tskills_itemB1: [null, 'text', 'Skill', 'Being well liked'],\r\n\t\tskills_itemC1: [null, 'text', 'Skill', 'Being well liked'],\r\n\t\tskills_itemD1: [null, 'text', 'Skill', 'Being well liked'],\r\n\t\tskills_itemE1: [null, 'text', 'Skill', 'Being well liked'],\r\n\t\tskills_itemF1: [null, 'text', 'Skill', ''],\r\n\t\tskills_itemG1: [null, 'text', 'Skill', ''],\r\n\t\tskills_itemH1: [null, 'text', 'Skill', ''],\r\n\t\tintroduction_given: [null, 'text', 'First Name', 'Given'],\r\n\t\tintroduction_surname: [null, 'text', 'Last Name', 'Surname'],\r\n\t\tintroduction_title: [null, 'text', 'Professional Title', 'Professional Title'],\r\n\t\tintroduction_about: [null, 'textarea', 'About', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.'],\r\n\t\tworkExperience_company0: [null, 'text', 'Company', 'Company Name'],\r\n\t\tworkExperience_position0: [null, 'text', 'Position', '/ Position Title'],\r\n\t\tworkExperience_duration0: [null, 'text', 'Tenure', 'From 2018 to 2020'],\r\n\t\tworkExperience_summary0: [null, 'text', 'Position Summary', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod'],\r\n\t\tworkExperience_achievementA0: [null, 'text', 'Achievement', 'Made x money doing y things'],\r\n\t\tworkExperience_achievementB0: [null, 'text', 'Achievement', 'Made x money doing y things'],\r\n\t\tworkExperience_achievementC0: [null, 'text', 'Achievement', 'Made x money doing y things'],\r\n\t\tworkExperience_achievementD0: [null, 'text', 'Achievement', ''],\r\n\t\tworkExperience_achievementE0: [null, 'text', 'Achievement', ''],\r\n\t\tworkExperience_company1: [null, 'text', 'Company', 'Company Name'],\r\n\t\tworkExperience_position1: [null, 'text', 'Position', '/ Position Title'],\r\n\t\tworkExperience_duration1: [null, 'text', 'Tenure', 'From 2018 to 2020'],\r\n\t\tworkExperience_summary1: [null, 'text', 'Position Summary', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod'],\r\n\t\tworkExperience_achievementA1: [null, 'text', 'Achievement', 'Made x money doing y things'],\r\n\t\tworkExperience_achievementB1: [null, 'text', 'Achievement', 'Made x money doing y things'],\r\n\t\tworkExperience_achievementC1: [null, 'text', 'Achievement', 'Made x money doing y things'],\r\n\t\tworkExperience_achievementD1: [null, 'text', 'Achievement', ''],\r\n\t\tworkExperience_achievementE1: [null, 'text', 'Achievement', ''],\r\n\t\tworkExperience_achievementF1: [null, 'text', 'Achievement', ''],\r\n\t\tportrait_image: [''],\r\n\t}); \r\n\r\n\tconst [displayForm, setDisplayForm] = useState(null);\r\n\r\n\t// Event handlers\r\n\r\n\tconst handleInputChange = (event) => {\r\n\t\tconst name = event.target.name;\r\n\t\t\r\n\t\t// Convert empty string to null to remove unused fields\r\n\t\tlet value = event.target.value;\r\n\t\tif (value === '') {\r\n\t\t\tvalue = null;\r\n\t\t}\r\n\r\n\t\tlet inputField = inputFields[name].slice();\r\n\t\tinputField[0] = value;\r\n\t\t\r\n\t\tconst newInputObject = {[name]: inputField};\r\n\r\n\t\tsetInputFields((prevState) => {\r\n\t\t\treturn {...prevState, ...newInputObject};\r\n\t\t});\r\n\t}\r\n\r\n\tconst handleImageChange = (result) => {\r\n\t\tconst imageChangeObject = {portrait_image: [result]};\r\n\t\r\n\t\tsetInputFields((prevState) => {\r\n\t\t\treturn {...prevState, ...imageChangeObject};\r\n\t\t});\r\n\t}\r\n\r\n\tconst createFieldGroup = (group) => {\r\n\t\tsetInputFields((prevState) => {\r\n\t\t\treturn {...prevState, ...group}\r\n\t\t})\r\n\t}\r\n\r\n\tconst deleteFieldGroup = (fields) => {\r\n\t\tsetInputFields((prevState) => {\r\n\t\t\tconst newState = {...prevState};\r\n\t\t\t\r\n\t\t\tObject.keys(fields).forEach((field) => delete newState[field]);\r\n\r\n    \t\treturn newState;\r\n\t\t});\r\n\t}\r\n\r\n\tconst displaySectionForm = (section) => {\r\n\t\tsetDisplayForm(section);\r\n\t}\r\n\r\n\tconst handlePrint = useReactToPrint({\r\n\t\tcontent: () => CVRef.current,\r\n\t});\r\n\r\n\t// State distribution functions\r\n\r\n\tconst sortStateIntoSections = (inputFlds) => {\r\n\t\t/* {contact: {field1: [i, n, f, o], field2: [], ...}, education: {}, ...} */\r\n\t\tconst sectionSortedFields = {};\r\n\r\n\t\tObject.keys(inputFlds).forEach((key) => {\r\n\t\t\tconst underscoreIndex = key.indexOf('_');\r\n\t\t\t// Filter out non-section oriented states\r\n\t\t\tif (underscoreIndex === -1) return;\r\n\r\n\t\t\tconst section = key.slice(0, underscoreIndex);\r\n\t\t\r\n\t\t\tif (!sectionSortedFields[section]) {\r\n\t\t\t\tsectionSortedFields[section] = {};\r\n\t\t\t}\r\n\t\t\r\n\t\t\tsectionSortedFields[section][key] = inputFlds[key];\r\n\t\t});\r\n\r\n\t\treturn sectionSortedFields;\r\n\t}\r\n\r\n\tconst allInputValuesNull = (flds) => {\r\n\t\treturn Object.values(flds).every((inputInfo) => {\r\n\t\t\treturn inputInfo[0] === null;\r\n\t\t});\r\n\t}\r\n\r\n\tconst distillDisplayData = (sortedState) => {\r\n\t\t/* {contact: {field1: displayStr, field2: displayStr, ...}, education: {}, ...} */\r\n\t\tconst displayData = {}\r\n\t\tObject.keys(sortedState).forEach(section => {\r\n\t\t\tdisplayData[section] = {}\r\n\r\n\t\t\t/* When all field values are null, the cv is populated\r\n\t\t\tby the placeholder text instead of the input. This provides \r\n\t\t\ta readily available design guide for the template.\r\n\t\t\t*/\r\n\t\t\tconst inputValuesNull = allInputValuesNull(sortedState[section]);\r\n\t\t\tconst displayIndex = inputValuesNull ? 3 : 0;\r\n\r\n\t\t\tObject.keys(sortedState[section]).forEach((field) => { \r\n\t\t\tdisplayData[section][field] = sortedState[section][field][displayIndex];\r\n\t\t\t})\r\n\t\t})\r\n\t\treturn displayData;\r\n\t}\r\n\r\n\tconst getFormType = (section) => {\r\n\t\tif (section === null) return null;\r\n\r\n        const dynamicSections = [\r\n\t\t\t'skills',\r\n            'education',\r\n\t\t\t'workExperience',\r\n        ];\r\n\r\n\t\tif (dynamicSections.includes(section)) {\r\n\t\t\treturn 'dynamic';\r\n\t\t} else if (section === 'portrait') {\r\n\t\t\treturn 'image';\r\n\t\t} else {\r\n\t\t\treturn 'form';\r\n\t\t}\r\n    }\r\n\r\n\t\r\n\tconst sectionedFields = sortStateIntoSections(inputFields);\r\n\tconst displayData = distillDisplayData(sectionedFields);\r\n\tconst formType = getFormType(displayForm);\r\n\r\n\treturn (\r\n\t\t<div className=\"cv-creator-container\">\r\n\t\t\t<div className=\"cv-creator\">\r\n\t\t\t\t<button \r\n\t\t\t\t\tclassName=\"btn btn-print-cv\"\r\n\t\t\t\t\tonClick={handlePrint}>\r\n\t\t\t\tPrint / Save PDF\r\n\t\t\t\t</button>\r\n\t\t\t\t<CV \r\n\t\t\t\t\tportrait={displayData.portrait}\r\n\t\t\t\t\tcontact={displayData.contact}\r\n\t\t\t\t\teducation={displayData.education}\r\n\t\t\t\t\tskills={displayData.skills}\r\n\t\t\t\t\tintroduction={displayData.introduction}\r\n\t\t\t\t\tworkExperience={displayData.workExperience}\r\n\t\t\t\t\tformDisplay={displaySectionForm}\r\n\t\t\t\t\tref={CVRef}\r\n\t\t\t\t/>\r\n\t\t\t\t{formType === 'form' &&\r\n\t\t\t\t\t<CVForm \r\n\t\t\t\t\t\tfields={sectionedFields[displayForm]}\r\n\t\t\t\t\t\tsection={displayForm} \r\n\t\t\t\t\t\tinputChangeHandle={handleInputChange}\r\n\t\t\t\t\t\tformDisplay={displaySectionForm}\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\t{formType === 'dynamic' &&\r\n\t\t\t\t\t<CVDynamicFrom \r\n\t\t\t\t\t\tfields={sectionedFields[displayForm]}\r\n\t\t\t\t\t\tsection={displayForm} \r\n\t\t\t\t\t\tinputChangeHandle={handleInputChange}\r\n\t\t\t\t\t\tformDisplay={displaySectionForm}\r\n\t\t\t\t\t\tfieldGroupDelete={deleteFieldGroup}\r\n\t\t\t\t\t\tfieldGroupCreate={createFieldGroup}\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\t{formType === 'image' &&\r\n\t\t\t\t\t<CVImageForm \r\n\t\t\t\t\t\tsection={displayForm} \r\n\t\t\t\t\t\timageChangeHandle={handleImageChange}\r\n\t\t\t\t\t\tformDisplay={displaySectionForm}\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n\t\r\n}\r\n\r\nexport default CVCreator;","import React from 'react';\r\n\r\nfunction Header(props) {\r\n    return (\r\n        <header id=\"header\" className=\"d-flex align-items-center header-transparent\">\r\n            <div className=\"container d-flex justify-content-between align-items-center\">\r\n                <div className=\"logo\">\r\n                    <h1 className=\"text-light\"><span>CVCreator</span></h1>\r\n                </div>\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nfunction Hero(props) {\r\n    return (\r\n        <section id=\"hero\" className=\"d-flex justify-cntent-center align-items-center\">\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Hero;","import React from 'react';\r\n\r\nfunction Footer(props) {\r\n    return (\r\n        <footer>\r\n            <div className=\"footer-top\"></div>\r\n            <div className=\"copyright\">\r\n                &copy; Copyright <strong><span>Joshua Aldridge</span></strong>. All Rights Reserved\r\n            </div>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","import CVCreator from './components/cv/cv-creator';\nimport Header from './components/header';\nimport Hero from './components/hero';\nimport Footer from './components/footer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Hero />\n      <CVCreator />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles/cv.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}