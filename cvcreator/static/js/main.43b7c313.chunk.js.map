{"version":3,"sources":["utils/storage.js","components/cv/sections/section.jsx","components/cv/sections/portrait.jsx","components/cv/sections/contact.jsx","components/cv/sections/education.jsx","components/cv/sections/skills.jsx","components/cv/sections/introduction.jsx","components/cv/sections/work-experience.jsx","components/cv/cv.jsx","theme/useTheme.jsx","components/cv/dashboard/theme-selector.jsx","components/cv/dashboard/create-theme.jsx","components/cv/dashboard/dashboard.jsx","components/cv/user-info-forms/cv-input.jsx","components/cv/user-info-forms/cv-form.jsx","components/cv/user-info-forms/deletable-field-group.jsx","components/cv/user-info-forms/cv-dynamic-form.jsx","components/cv/user-info-forms/cv-image-form.jsx","components/cv/cv-creator.jsx","components/header.jsx","components/hero.jsx","components/footer.jsx","components/auth/login-form.jsx","components/auth/register-form.jsx","App.js","index.js"],"names":["setToLS","key","value","window","localStorage","setItem","JSON","stringify","getFromLS","getItem","parse","removeFromLS","removeItem","CVSection","styled","section","props","EditIconContainer","div","EditIcon","i","Section","children","formDisplay","sectionName","useState","displayEditIcon","setDisplayEditIcon","editIconContainer","useRef","onMouseEnter","onMouseLeave","CSSTransition","nodeRef","in","timeout","classNames","unmountOnExit","ref","className","onClick","PortraitContainer","PortraitWrapper","PortraitImage","img","Portrait","fields","image","src","alt","ContactItem","type","phone","email","portfolio","github","linkedIn","instagram","youtube","facebook","getIconClass","Contact","Object","entries","map","inputInfo","InstitutionWrapper","InstitutionDiv","degree","institution","timeToDegree","Education","numberIdentifiers","keys","charAt","length","sort","Set","getFieldGroupNumbers","groupNum","degreeInfo","institutionInfo","timeToDegreeInfo","SkillType","h4","Skill","li","SkillGroup","fieldGroup","listItems","forEach","field","listItemIdentifier","toUpperCase","listItem","push","winnowAndSortListitems","Skills","groupedFields","groupTheFields","group","FirstName","span","ProfessionalTitle","Introduction","givenName","surname","title","about","PositionTitle","Achievement","Position","split","WorkExperience","CVWrapper","theme","bg","fg","contentFont","headerFont","accentBg","LeftColumn","accentFg","RightColumn","CV","this","portrait","contact","education","skills","introduction","workExperience","React","Component","useTheme","themes","data","navyAvi","setTheme","setMode","mode","useEffect","allThemes","localTheme","getFonts","google","ThemeMenu","Dropdown","Menu","ThemeOption","Item","ThemeIcon","DeleteIcon","ThemeSelector","workingThemeSet","themeDelete","themeContext","useContext","ThemeContext","autoClose","Toggle","id","varient","values","chosenTheme","name","active","ThemeCreatorMenu","CreatorLegend","legend","CreatorTextInput","Form","Control","CreatorSelect","Select","CreatorOption","option","SaveButton","button","CreateTheme","themeChangeHandle","createdThemeSave","allFonts","hFontVal","cFontVal","WebFont","load","families","current","handleFontChange","event","target","onSubmit","preventDefault","saveCreatedTheme","FloatingLabel","controlId","label","placeholder","onChange","Label","font","as","DashboardWrapper","DashButton","FlashMessageContainer","message","CallToRegister","Spacer","Divider","Dashboard","printHandle","userInfoBackupHandle","flashMessage","flashMessageExpire","loggedIn","setAllThemes","flashTimeout","setTimeout","clearTimeout","camelize","str","replace","word","index","toLowerCase","themeName","nameCamelized","newAllThemes","console","log","allThemesLS","workingTheme","uuidv4","allThemeNames","includes","toString","ensureNameUniqueness","newThemeData","to","CVInput","inputName","currentValue","inputType","labelContent","inputChangeHandle","handleInputChange","rows","cols","htmlFor","CVForm","string","displayForm","slice","DeletableFieldGroup","fieldGroupDelete","CVDynamicForm","fieldGroupCreate","prettifiedSectionName","join","splitCamelCaseString","newGroup","newGroupNum","firstGroupCopy","newFieldName","createFieldGroup","CVImageForm","imageChangeHandle","class","e","reader","FileReader","file","files","onloadend","result","readAsDataURL","handleImageChange","CVCreatorWrapper","Creator","CVCreator","CVRef","setWorkingTheme","contactFields","setContactFields","degree_0","institution_0","timeToDegree_0","degree_1","institution_1","timeToDegree_1","educationFields","setEducationFields","skillType_0","skill_A0","skill_B0","skill_C0","skill_D0","skill_E0","skill_F0","skill_G0","skill_H0","skill_I0","skillType_1","skill_A1","skill_B1","skill_C1","skill_D1","skill_E1","skill_F1","skill_G1","skill_H1","skillsFields","setSkillsFields","introductionFields","setIntroductionFields","company_0","position_0","duration_0","summary_0","achievement_A0","achievement_B0","achievement_C0","achievement_D0","achievement_E0","company_1","position_1","duration_1","summary_1","achievement_A1","achievement_B1","achievement_C1","achievement_D1","achievement_E1","achievement_F1","workExperienceFields","setWorkExperienceFields","portraitFields","setPortraitFields","allFields","allFieldSetters","updateStateWithMongoData","mongoInfo","newState","Array","isArray","gWithoutClassification","sectionFields","groupSansClassificationTags","fieldKey","keyWithoutTag","groupTag","filter","fieldsCopy","iter","listItemTag","String","fromCharCode","fieldsCopyCopy","concat","newField","prevState","userInfoLoaded","location","state","userInfo","localLoggedInStatus","setLocalLoggedInStatus","axios","method","url","headers","Authorization","then","response","catch","error","setFlashMessage","expireFlashMessage","useCallback","exportStateInMongoFormat","mongoFormattedState","currentValueState","stateWithOnlyCurrentValueField","taglessKey","tag","setDisplayForm","inputField","newInputObject","displaySectionForm","handlePrint","useReactToPrint","content","determineDataDisplayed","flds","displayData","displayIndex","every","formType","getFormType","imageChangeObject","LogoContainer","NavList","ul","Header","logoutHandle","activeStyle","boxShadow","exact","Hero","Footer","AuthContainer","FormContainer","AuthForm","LoginForm","loginHandle","password","inputFields","setInputFields","setUserInfo","setError","pathname","user","token","RegisterForm","errorMessages","setErrorMessages","registered","setRegistered","prettifyAndSetErrorMessages","messagesObj","messages","trimmedEmail","trim","trimmedPassword","test","errMessages","App","setLoggedIn","handleLogin","path","render","Index","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.43b7c313.chunk.js","sourcesContent":["export const setToLS = (key, value) => {\r\n    window.localStorage.setItem(key, JSON.stringify(value));\r\n}\r\n\r\nexport const getFromLS = key => {\r\n    const value = window.localStorage.getItem(key);\r\n\r\n    if (value) {\r\n        return JSON.parse(value);\r\n    }\r\n}\r\n\r\nexport const removeFromLS = (key) => {\r\n    window.localStorage.removeItem(key);\r\n}\r\n\r\nexport const existsInLS = key => {\r\n    const value = window.localStorage.getItem(key);\r\n    return !!value;\r\n}","import React, {useState, useRef} from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport styled from 'styled-components';\r\n\r\nconst CVSection = styled.section`\r\n    margin-bottom: ${props => props.section === 'introduction' ? \"0\" : \"1.5em\"};\r\n    position: relative;\r\n    ${props => props.section === 'introduction' && \"height: calc(1.8in + 1.5em);\"};\r\n`;\r\n\r\nconst EditIconContainer = styled.div`\r\n    position: absolute;\r\n    top: 0px;\r\n    right: 0px;\r\n    height: .3in;\r\n    width: .3in;\r\n    display: flex;\r\n    align-items: center;\r\n    border-radius: 6%;\r\n    box-shadow: 0 0 3px rgb(88,88,88);\r\n    background-color: rgb(248, 248, 248);\r\n\r\n    ${props => props.section === 'portrait' && \"margin-top: .6in;\"}\r\n\r\n    &:hover {\r\n        background-color: rgb(88,88,88);\r\n    }\r\n`;\r\n\r\nconst EditIcon = styled.i`\r\n    margin: 0 auto;\r\n    font-size: 1.5em;\r\n    color: rgb(88,88,88);\r\n    ${EditIconContainer}:hover & {\r\n        color: rgb(248, 248, 248);\r\n    }\r\n`;\r\n\r\nfunction Section({children, formDisplay, sectionName}) {\r\n    const [displayEditIcon, setDisplayEditIcon] = useState(false);\r\n    const editIconContainer = useRef(null);\r\n\r\n    const displayForm = () => {\r\n\t\tformDisplay(sectionName);\r\n\t}\r\n\r\n    return (\r\n        <CVSection\r\n            section={sectionName}\r\n            onMouseEnter={() => setDisplayEditIcon(true)}\r\n            onMouseLeave={() => setDisplayEditIcon(false)}\r\n        >\r\n            <CSSTransition \r\n                nodeRef={editIconContainer}\r\n                in={displayEditIcon}\r\n                timeout={300}\r\n                classNames=\"edit-icon\"\r\n                unmountOnExit\r\n            >\r\n                <EditIconContainer ref={editIconContainer} className=\"edit-icon-container\" section={sectionName}>\r\n                    <EditIcon\r\n                        className=\"bi bi-pencil-square\"\r\n                        onClick={displayForm}\r\n                    ></EditIcon>\r\n                </EditIconContainer>\r\n            </CSSTransition>\r\n            {children}\r\n        </CVSection>\r\n    );\r\n}\r\n\r\nexport default Section;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst PortraitContainer = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    height: 2.4in;\r\n`;\r\n\r\nconst PortraitWrapper = styled.div`\r\n    background-color: rgb(189, 189, 189);\r\n    width: 1.61in;\r\n    height: 1.61in;\r\n    border-radius: 50%;\r\n    margin-top: 1em;\r\n`;\r\n\r\nconst PortraitImage = styled.img`\r\n    width: 1.62in;\r\n    height: 1.62in;\r\n    border-radius: 50%;\r\n    background-color: $accent-bg;\r\n`;\r\n\r\nfunction Portrait({fields}) {\r\n\r\n    return (\r\n        <PortraitContainer>\r\n            <PortraitWrapper>\r\n                {fields.image &&\r\n                    <PortraitImage src={fields.image} alt=\"Portrait\" />}\r\n            </PortraitWrapper>\r\n        </PortraitContainer>\r\n    );\r\n}\r\n\r\nexport default Portrait;","import React from 'react';\r\n\r\nfunction ContactItem({type, value}) {\r\n\r\n\tconst getIconClass = (type) => {\r\n\t\tconst iconClasses = {\r\n\t\t\tphone: \"bi bi-telephone-fill\",\r\n\t\t\temail: \"bi bi-envelope-fill\",\r\n\t\t\tportfolio: \"bi bi-border-style\",\r\n\t\t\tgithub: \"bi bi-github\",\r\n\t\t\tlinkedIn: \"bi bi-linkedin\",\r\n\t\t\tinstagram: \"bi bi-instagram\",\r\n\t\t\tyoutube: \"bi bi-youtube\",\r\n\t\t\tfacebook: \"bi bi-facebook\",\r\n\t\t};\r\n\r\n\t\treturn iconClasses[type];\r\n\t}\r\n\t\r\n\tif (value === null || value === '') return null;\r\n\r\n\treturn (\r\n\t\t<li className=\"contact-item\">\r\n\t\t\t<i className={getIconClass(type)}></i>\r\n\t\t\t{value}\r\n\t\t</li>\r\n\t);\t\r\n\t\r\n}\r\n\r\nfunction Contact({fields, formDisplay}) {\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h2>Contact</h2>\r\n\t\t\t<ul className=\"contact-list\">\r\n\t\t\t\t{ Object.entries(fields).map(([key, inputInfo]) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<ContactItem \r\n\t\t\t\t\t\t\ttype={key}\r\n\t\t\t\t\t\t\tvalue={(inputInfo)}\r\n\t\t\t\t\t\t\tkey={key}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</ul>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default Contact;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst InstitutionWrapper = styled.div`\r\n    margin-bottom: 1em;\r\n        p {\r\n            margin-bottom: .2em;\r\n        }\r\n`;\r\n\r\nfunction InstitutionDiv({degree, institution, timeToDegree}) {\r\n    return (\r\n        <InstitutionWrapper>\r\n            <h4>{degree}</h4>\r\n            <p>{institution}</p>\r\n            <p>{timeToDegree}</p>\r\n        </InstitutionWrapper>\r\n    );\r\n}\r\n\r\nfunction Education({fields}) {   \r\n\r\n    const getFieldGroupNumbers = () => {\r\n        const numberIdentifiers = Object.keys(fields).map((key) => key.charAt(key.length - 1)).sort();\r\n        const uniqueIdentifiers = [...new Set(numberIdentifiers)];\r\n        return uniqueIdentifiers;\r\n    }\r\n\r\n    return (\r\n        <>  \r\n            <h2>Education</h2>\r\n            {\r\n                getFieldGroupNumbers().map((groupNum) => {\r\n                    const degreeInfo = fields['degree_' + groupNum];\r\n                    const institutionInfo = fields['institution_' + groupNum];\r\n                    const timeToDegreeInfo = fields['timeToDegree_' + groupNum];\r\n\r\n                    return (\r\n                        <InstitutionDiv \r\n                            degree={degreeInfo}\r\n                            institution={institutionInfo}\r\n                            timeToDegree={timeToDegreeInfo}\r\n                            key={degreeInfo + groupNum}\r\n                        />\r\n                    );\r\n                })\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Education;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst SkillType = styled.h4`\r\n    && {\r\n        font-size: 1.9em;\r\n    }\r\n`;\r\n\r\nconst Skill = styled.li`\r\n    && {\r\n        margin: 0;\r\n    }\r\n`;\r\n\r\nfunction SkillGroup({fieldGroup, groupNum}) {\r\n    \r\n    function winnowAndSortListitems(fields) {\r\n        // Removes any empty list items\r\n        let listItems = [];\r\n\r\n        Object.keys(fields).forEach((field) => {\r\n            const listItemIdentifier = field.charAt(field.length - 2);\r\n            if (listItemIdentifier === listItemIdentifier.toUpperCase()) {\r\n                const listItem = fieldGroup[field];\r\n\r\n                if (listItem !== null && listItem !== '') {\r\n                    listItems.push(<Skill key={listItemIdentifier}>{listItem}</Skill>);\r\n                }\r\n            }\r\n        });\r\n\r\n        const sortedListItems = listItems.sort()\r\n        return sortedListItems;\r\n    }\r\n\r\n    return (\r\n\t\t<div className=\"skill-list-container\">\r\n\t\t\t<SkillType>{fieldGroup['skillType' + groupNum]}</SkillType>\r\n\t\t\t<ul className=\"skill-list\">\r\n\t\t\t\t{winnowAndSortListitems(fieldGroup)}\r\n\t\t\t</ul>\r\n\t\t</div>\r\n    );\r\n}\r\n\r\nfunction Skills({fields}) {\r\n\r\n\tfunction groupTheFields(fields) {\r\n        let groupedFields = [];\r\n\r\n        Object.keys(fields).forEach((field) => {\r\n            const groupNum = field.charAt(field.length - 1);\r\n            if (!groupedFields[groupNum]) {\r\n                groupedFields[groupNum] = {}\r\n            }\r\n            groupedFields[groupNum][field] = fields[field];\r\n        });\r\n\r\n        return groupedFields;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h2>Skills</h2>\r\n\t\t\t\t{\r\n                    groupTheFields(fields).map((group, i) => {\r\n                        return (\r\n                            <SkillGroup \r\n                                fieldGroup={group}\r\n                                groupNum={i}\r\n                                key={i}\r\n                            />\r\n                        );\r\n                    })\r\n                }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Skills;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst FirstName = styled.span`\r\n    font-weight: bold;\r\n`;\r\n\r\nconst ProfessionalTitle = styled.h4`\r\n    && {\r\n        letter-spacing: .15em;\r\n        margin-bottom: 1em;\r\n    }\r\n`;\r\n\r\nfunction Introduction({fields}) {\r\n    return (\r\n        <>\r\n            <h1>\r\n                <FirstName>{fields.givenName}</FirstName> \r\n                {fields.surname}\r\n            </h1>\r\n            <ProfessionalTitle className=\"pro-title\">{fields.title}</ProfessionalTitle>\r\n            <p className=\"about\">{fields.about}</p>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Introduction;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst PositionTitle = styled.span`\r\n    font-weight: normal;\r\n`;\r\n\r\nconst Achievement = styled.li`\r\n    && {\r\n        font-size: .85em;\r\n    }\r\n`;\r\n\r\nfunction Position({fieldGroup, groupNum}) {\r\n    \r\n    function winnowAndSortListitems(fields) {\r\n        let listItems = [];\r\n\r\n        Object.keys(fields).forEach((field,i) => {\r\n            // Check whether catalogue tag has two chars\r\n            if (field.split('_')[1].length === 2) {\r\n                const listItem = fieldGroup[field];\r\n\r\n                if (listItem !== null && listItem !== '') {\r\n                    listItems.push(<Achievement key={i}>{listItem}</Achievement>);\r\n                }\r\n            }\r\n        });\r\n\r\n        const sortedListItems = listItems.sort()\r\n        return sortedListItems;\r\n    }\r\n\r\n    return (\r\n        <div className=\"position\">\r\n            <h4 className=\"company\">{fieldGroup['company_' + groupNum]} <PositionTitle>{fieldGroup['position_' + groupNum]}</PositionTitle></h4>\r\n            <p className=\"duration\">{fieldGroup['duration_' + groupNum]}</p>\r\n            <p className=\"position-summary\">{fieldGroup['summary_' + groupNum]}</p>\r\n            <ul className=\"achievements\">\r\n                {winnowAndSortListitems(fieldGroup)}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction WorkExperience({fields}) {\r\n\r\n    function groupTheFields(fields) {\r\n        let groupedFields = [];\r\n\r\n        Object.keys(fields).forEach((field) => {\r\n            const groupNum = field.charAt(field.length - 1);\r\n            if (!groupedFields[groupNum]) {\r\n                groupedFields[groupNum] = {}\r\n            }\r\n            groupedFields[groupNum][field] = fields[field];\r\n        });\r\n\r\n        return groupedFields;\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <h2>Work Experience</h2>\r\n            {\r\n                groupTheFields(fields).map((group, i) => {\r\n                    return (\r\n                        <Position \r\n                            fieldGroup={group}\r\n                            groupNum={i}\r\n                            key={i}\r\n                        />\r\n                    );\r\n                })\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default WorkExperience;","import React from 'react';\r\nimport Section from './sections/section'\r\nimport Portrait from './sections/portrait';\r\nimport Contact from './sections/contact';\r\nimport Education from './sections/education';\r\nimport Skills from './sections/skills';\r\nimport Introduction from './sections/introduction';\r\nimport WorkExperience from './sections/work-experience';\r\nimport styled from 'styled-components';\r\n\r\n//react-to-print only prints class components\r\n\r\nconst CVWrapper = styled.div`\r\n\tword-wrap: break-word;\r\n    display: flex;\r\n    width: 8.5in;\r\n    height: 11in;\r\n    background-color: ${props => props.theme.bg};\r\n    color: ${props => props.theme.fg};\r\n    font-family: ${props => props.theme.contentFont};\r\n    text-align: left;\r\n\th1, h2, h3, h4, h5 {\r\n        font-family: ${props => props.theme.headerFont};\r\n        color: ${props => props.theme.accentBg};\r\n    }\r\n\th2 {\r\n        font-size: 1.4em;\r\n        letter-spacing: .1em;\r\n        border-bottom: ${props => props.theme.accentBg};\r\n        padding: .3em 0;\r\n        margin-bottom: 1em;\r\n    }\r\n\r\n\th4 {\r\n        font-size: .9em;\r\n        margin-bottom: .2em;\r\n        font-weight: bold;\r\n    }\r\n\r\n\tp {\r\n        font-size: .8em;\r\n        margin-bottom: .9em;\r\n    }\r\n\r\n    li {\r\n        font-size: .9em;\r\n    }\r\n`;\r\n\r\nconst LeftColumn = styled.div`\r\n\twidth: 32%;\r\n\tbackground-color: ${props => props.theme.accentBg};\r\n\tcolor: ${props => props.theme.accentFg};\r\n\tpadding-left: .6in;\r\n\tpadding-bottom: .6in;\r\n\t.edit-icon-container {\r\n\t\tmargin-right: .5em;\r\n\t}\r\n\r\n\th1, h2, h3, h4, h5 {\r\n            color: ${props => props.theme.bg};\r\n        }\r\n\r\n    h2 {\r\n        border-bottom: 1.5px solid ${props => props.theme.bg};\r\n    }\r\n\t\r\n\tul {\r\n            list-style: none;\r\n            padding: 0;\r\n\r\n            li {\r\n                margin: .5em 0;\r\n            }\r\n            \r\n            i {\r\n                margin-right: .5em;\r\n            }           \r\n        }\r\n`;\r\n\r\nconst RightColumn = styled.div`\r\n\twidth: 68%;\r\n    padding: .6in .6in .6in 2.5em;\r\n\tul {\r\n        padding-left: 1em;\r\n    }\r\n`;\r\n\r\nclass CV extends React.Component {\r\n\trender() {\r\n\t\tconst {portrait, contact, education, skills, introduction, workExperience, formDisplay} = this.props;\r\n\r\n\t\treturn (\r\n\t\t\t<CVWrapper className=\"cv\">\r\n\t\t\t\t\t<LeftColumn className=\"left-column\">\r\n\t\t\t\t\t\t<Section formDisplay={formDisplay} sectionName=\"portrait\">\r\n\t\t\t\t\t\t\t<Portrait fields={portrait} />\r\n\t\t\t\t\t\t</Section>\r\n\t\t\t\t\t\t<Section formDisplay={formDisplay} sectionName=\"contact\">\r\n\t\t\t\t\t\t\t<Contact fields={contact} />\r\n\t\t\t\t\t\t</Section>\r\n\t\t\t\t\t\t<Section formDisplay={formDisplay} sectionName=\"education\">\r\n\t\t\t\t\t\t\t<Education fields={education} />\r\n\t\t\t\t\t\t</Section>\r\n\t\t\t\t\t\t<Section formDisplay={formDisplay} sectionName=\"skills\">\r\n\t\t\t\t\t\t\t<Skills fields={skills} />\r\n\t\t\t\t\t\t</Section>\r\n\t\t\t\t\t</LeftColumn>\r\n\t\t\t\t\t<RightColumn className=\"right-column\">\r\n\t\t\t\t\t\t<Section formDisplay={formDisplay} sectionName=\"introduction\">\r\n\t\t\t\t\t\t\t<Introduction fields={introduction} />\r\n\t\t\t\t\t\t</Section>\r\n\t\t\t\t\t\t<Section formDisplay={formDisplay} sectionName=\"workExperience\">\r\n\t\t\t\t\t\t\t<WorkExperience fields={workExperience}/>\r\n\t\t\t\t\t\t</Section>\r\n\t\t\t\t\t</RightColumn>\r\n\t\t\t</CVWrapper>\r\n\t\t);\r\n\t\r\n\t}\r\n}\r\n\r\nexport default CV;","import { useEffect, useState } from 'react';\r\nimport { setToLS, getFromLS } from '../utils/storage';\r\n\r\nexport const useTheme = () => {\r\n    const  themes = getFromLS('all-themes');\r\n    const [theme, setTheme] = useState(themes.data.navyAvi);\r\n\r\n    const setMode = (mode) => {\r\n        setToLS('theme', mode);\r\n        setTheme(mode);\r\n    }\r\n\r\n    const getFonts = () => {\r\n        const allFonts = getFromLS('all-fonts');\r\n        const googleFonts = allFonts.data.google;\r\n        return googleFonts;\r\n    }\r\n\r\n    useEffect(() => {\r\n        const allThemes = getFromLS('all-themes');\r\n        const localTheme = getFromLS('theme');\r\n        localTheme ? setTheme(localTheme) : setMode(allThemes.data.navyAvi);\r\n    }, []);\r\n\r\n    return { theme, setMode, getFonts };\r\n}","import React, { useContext } from 'react';\r\nimport { useTheme } from '../../../theme/useTheme';\r\nimport styled, { ThemeContext } from 'styled-components';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\n\r\nconst ThemeMenu = styled(Dropdown.Menu)`\r\n    background-color: rgba(30, 67, 86, 89%);\r\n    min-width: 12rem;\r\n    transform: translate3d(4px, 65px, 0px)!important;\r\n`;\r\n\r\nconst ThemeOption = styled(Dropdown.Item)`\r\n    &&.btn.dropdown-item {\r\n        display: flex;\r\n        align-items: center;\r\n        width: auto;\r\n        padding: 8px 8px;\r\n        margin: 3;\r\n        border: none;\r\n        &.active {\r\n        border: 2px solid #68A4C4;\r\n        &:focus {\r\n            box-shadow: none;\r\n        }\r\n    }\r\n    }\r\n`;\r\n\r\nconst ThemeIcon = styled.div`\r\n    width: 30px;\r\n    height: 30px;\r\n    background: ${props => `linear-gradient( 90deg, ${props.accentBg}, ${props.accentBg} 50%, ${props.bg} 51% )`};\r\n    box-shadow: 0 0 1px #eaeaea;\r\n    border-radius: 50%;\r\n    margin-right: 8px;\r\n`;\r\n\r\nconst DeleteIcon = styled.i`\r\n    margin-left: 18px;\r\n    font-size: 1.5em;\r\n    transition: 0.5s;\r\n    &:hover {\r\n       color: #1e4356; \r\n    }\r\n`;\r\n\r\n\r\nfunction ThemeSelector({workingThemeSet, allThemes, themeDelete}) {\r\n    const {setMode} = useTheme();\r\n    const themeContext = useContext(ThemeContext);\r\n\r\n    const setWorkingTheme = (chosenTheme) => {\r\n        setMode(chosenTheme);\r\n        // Give working theme default name\r\n        workingThemeSet({...chosenTheme, ...{name: 'New Theme'}});\r\n    }\r\n\r\n    return (\r\n        <Dropdown autoClose=\"outside\">\r\n            <Dropdown.Toggle id=\"dropdown-basic\" varient=\"outline-primary\">\r\n                Select Theme\r\n            </Dropdown.Toggle>\r\n\r\n            <ThemeMenu varient=\"dark\">\r\n                {\r\n                    Object.values(allThemes).map((theme, i) => {\r\n                        return (\r\n                            <ThemeOption\r\n                                className=\"btn\"\r\n                                onClick={() => setWorkingTheme(theme)}\r\n                                active={theme.id === themeContext.id}\r\n                                key={theme.id}>\r\n                                <ThemeIcon \r\n                                    bg={theme.bg}\r\n                                    accentBg={theme.accentBg}\r\n                                />\r\n                                {theme.name}\r\n                                {i > 2 &&\r\n                                    <DeleteIcon \r\n                                        className=\"bi bi-x-square close-input-group\"\r\n                                        onClick={() => themeDelete(theme.name)}\r\n                                    ></DeleteIcon>}\r\n                            </ThemeOption>\r\n                        );\r\n                    })\r\n                }\r\n            </ThemeMenu>\r\n        </Dropdown>\r\n    );\r\n}\r\n\r\nexport default ThemeSelector;","import React, { useContext, useRef, useEffect } from 'react';\r\nimport styled, { ThemeContext } from \"styled-components\";\r\nimport { useTheme } from '../../../theme/useTheme';\r\nimport { Dropdown } from 'react-bootstrap';\r\nimport { Form, FloatingLabel } from 'react-bootstrap';\r\nimport WebFont from 'webfontloader';\r\n\r\nconst ThemeCreatorMenu = styled(Dropdown.Menu)`\r\n    background-color: rgba(30, 67, 86, 89%);\r\n    width: 16em;\r\n    color: #f9f9f9;\r\n    transform: translate3d(-20px, 65px, 0px)!important;\r\n`;\r\n\r\nconst CreatorLegend = styled.legend`\r\n    border-bottom: 2px solid #68A4C4;\r\n    display: block;\r\n    width: 100%;\r\n`;\r\n\r\nconst CreatorTextInput = styled(Form.Control)`\r\n    color: #f9f9f9;\r\n    background-color: transparent;\r\n    border: 2px solid #68A4C4;\r\n    &:focus {\r\n        background-color: transparent;\r\n        color:#f9f9f9;\r\n        border: 2px solid #68A4C4;\r\n        box-shadow: 0 0 3px 1px #ffffff4d;\r\n    }\r\n    &:active {\r\n        background-color: transparent;\r\n        border: 2px solid #68A4C4;\r\n    } \r\n`;\r\n\r\nconst CreatorSelect = styled(Form.Select)`\r\n    background-color: transparent;\r\n    border: 2px solid #68A4C4;\r\n    color: #f9f9f9;\r\n    padding: 20px;\r\n    &:focus {\r\n        background-color: transparent;\r\n        color:#f9f9f9;\r\n        border: 2px solid #68A4C4;\r\n        box-shadow: 0 0 3px 1px #ffffff4d;\r\n    }\r\n    &:active {\r\n        background-color: transparent;\r\n        border: 2px solid #68A4C4;\r\n    } \r\n`;\r\n\r\nconst CreatorOption = styled.option`\r\n    background-color: rgba(30, 67, 86);\r\n`;\r\n\r\nconst SaveButton = styled.button`\r\n    &&.btn.create-theme {\r\n        background: #68A4C4;\r\n        margin: 0;\r\n        width: auto;\r\n\r\n        &:hover {\r\n            background: #a2cce3;\r\n        }\r\n    }\r\n`;\r\n\r\nfunction CreateTheme({themeChangeHandle, createdThemeSave}) {\r\n    const themeContext = useContext(ThemeContext);\r\n    const {getFonts} = useTheme();\r\n    const allFonts = getFonts();\r\n    // Font value refs for fontloader\r\n    let hFontVal = useRef(themeContext.headerFont);\r\n    let cFontVal = useRef(themeContext.contentFont);\r\n\r\n    useEffect(() => {\r\n        WebFont.load({\r\n            google: {\r\n              families: [hFontVal.current, cFontVal.current]\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    const handleFontChange = (event) => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        name === 'headerFont' ? hFontVal.current = value : cFontVal.current = value;\r\n\r\n        WebFont.load({\r\n            google: {\r\n              families: [hFontVal.current, cFontVal.current]\r\n            }\r\n        });\r\n\r\n        themeChangeHandle(event);\r\n    }\r\n\r\n    const saveCreatedTheme = (event) => {\r\n        event.preventDefault();\r\n        createdThemeSave();\r\n    }\r\n\r\n    return(\r\n        <Dropdown>\r\n            <Dropdown.Toggle id=\"dropdown-basic\" varient=\"outline-primary\">\r\n                Create Theme\r\n            </Dropdown.Toggle>\r\n\r\n            <ThemeCreatorMenu varient=\"dark\">\r\n                <Form onSubmit={(event) => saveCreatedTheme(event)}>\r\n                    <div className=\"container\">\r\n                        <div className=\"row mb-3\">\r\n                            <div className=\"col-10 offset-1\">\r\n                                <FloatingLabel\r\n                                    controlId=\"theme-name\"\r\n                                    label=\"Theme Name\">\r\n                                <CreatorTextInput\r\n                                    type=\"text\"\r\n                                    placeholder=\"Theme Name\"\r\n                                    value={themeContext.name}\r\n                                    name=\"name\"\r\n                                    onChange={(event) => themeChangeHandle(event)}\r\n                                />\r\n                                </FloatingLabel>\r\n                            </div>\r\n                        </div>\r\n                        <fieldset>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-6 offset-1\">\r\n                                    <CreatorLegend>Main</CreatorLegend>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row mb-3\">\r\n                                <div className=\"col-5 offset-1\">\r\n                                    <Form.Label>Background</Form.Label>\r\n                            \r\n                                    <Form.Control\r\n                                        type=\"color\"\r\n                                        id=\"main-background-color\"\r\n                                        title=\"Main Background Color\"\r\n                                        value={themeContext.bg}\r\n                                        name=\"bg\"\r\n                                        onChange={(event) => themeChangeHandle(event)}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"col-5\">\r\n                                    <Form.Label>Foreground</Form.Label>\r\n                            \r\n                                    <Form.Control\r\n                                        type=\"color\"\r\n                                        id=\"main-foreground-color\"\r\n                                        title=\"Main Foreground Color\"\r\n                                        value={themeContext.fg}\r\n                                        name=\"fg\"\r\n                                        onChange={(event) => themeChangeHandle(event)}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </fieldset>\r\n                        <fieldset>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-6 offset-1\">\r\n                                    <CreatorLegend>Accent</CreatorLegend>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row mb-3\">\r\n                                <div className=\"col-5 offset-1\">\r\n                                    <Form.Label>Background</Form.Label>\r\n                            \r\n                                    <Form.Control\r\n                                        type=\"color\"\r\n                                        id=\"accent-background-color\"\r\n                                        title=\"Accent Background Color\"\r\n                                        value={themeContext.accentBg}\r\n                                        name=\"accentBg\"\r\n                                        onChange={(event) => themeChangeHandle(event)}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"col-5\">\r\n                                    <Form.Label>Foreground</Form.Label>\r\n                            \r\n                                    <Form.Control\r\n                                        type=\"color\"\r\n                                        id=\"accent-foreground-color\"\r\n                                        title=\"Accent Foreground Color\"\r\n                                        value={themeContext.accentFg}\r\n                                        name=\"accentFg\"\r\n                                        onChange={(event) => themeChangeHandle(event)}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </fieldset>\r\n                        <div className=\"row mb-3\">\r\n                            <div className=\"col-10 offset-1\">\r\n                                <FloatingLabel\r\n                                    controlId=\"header-font\"\r\n                                    label=\"Header Font\">\r\n                                    <CreatorSelect \r\n                                        name=\"headerFont\"\r\n                                        value={themeContext.headerFont}\r\n                                        onChange={(event) => handleFontChange(event)}>\r\n                                        {\r\n                                            allFonts.map((font, i) => {\r\n                                                return (\r\n                                                <CreatorOption \r\n                                                    value={font}\r\n                                                    key={i}>\r\n                                                    {font}\r\n                                                </CreatorOption>\r\n                                                );\r\n                                            })\r\n                                        }\r\n                                    </CreatorSelect>\r\n                                </FloatingLabel>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row mb-3\">\r\n                            <div className=\"col-10 offset-1\">\r\n                                <FloatingLabel\r\n                                    controlId=\"content-font\"\r\n                                    label=\"Content Font\">\r\n                                    <CreatorSelect \r\n                                        name=\"contentFont\"\r\n                                        value={themeContext.contentFont}\r\n                                        onChange={(event) => handleFontChange(event)}>\r\n                                        {\r\n                                            allFonts.map((font, i) => {\r\n                                                return (\r\n                                                <CreatorOption \r\n                                                    value={font}\r\n                                                    key={i}>\r\n                                                    {font}\r\n                                                </CreatorOption>\r\n                                                );\r\n                                            })\r\n                                        }\r\n                                    </CreatorSelect>\r\n                                </FloatingLabel>\r\n                            </div>\r\n                            <div className=\"row mb-3\">\r\n                                <div className=\"col-10 offset-1\">\r\n                                    <Dropdown.Item as={SaveButton} className=\"mt-4 btn create-theme\">\r\n                                        Add Theme\r\n                                    </Dropdown.Item>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Form>\r\n            </ThemeCreatorMenu>\r\n        </Dropdown>\r\n    );\r\n}\r\n\r\nexport default CreateTheme;","import React, { useState, useContext, useEffect } from 'react';\r\nimport ThemeSelector from './theme-selector';\r\nimport styled, { ThemeContext } from 'styled-components';\r\nimport CreateTheme from './create-theme';\r\nimport { getFromLS, setToLS } from '../../../utils/storage';\r\nimport { v4 as uuidv4  } from 'uuid';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst DashboardWrapper = styled.div`\r\n    display: flex;\r\n    padding-left: 2em;\r\n    padding-right: 2em;\r\n\r\n    && .btn {\r\n        font-family: 'Noto Sans JP', sans-serif;\r\n        font-weight: 500;\r\n        font-size: 14px;\r\n        \r\n        padding: 12px 15px;\r\n        transition: 0.5s;\r\n        line-height: 1;\r\n        margin: 20px 10px;\r\n        color: #fff;\r\n        background-color: transparent;\r\n        animation-delay: 0.8s;\r\n        border: 2px solid #68A4C4;\r\n        border-radius: 10px;\r\n        letter-spacing: 1px;\r\n        &:hover {\r\n            background: #68A4C4;\r\n            color: #fff;\r\n        }\r\n        &:active {\r\n            background-color: transparent;\r\n            border: 2px solid #68A4C4;\r\n        }\r\n        &:focus {\r\n            background-color: transparent;\r\n            border: 2px solid #68A4C4;\r\n            box-shadow: 0 0 3px 1px #ffffff4d;\r\n        }\r\n    }\r\n`;\r\n\r\nconst DashButton = styled.button`\r\n    &&.btn {\r\n    }\r\n`;\r\n\r\nconst FlashMessageContainer = styled.div`\r\n    color: #fefefe;\r\n    padding: 12px 15px;\r\n    display: flex;\r\n    align-items: center;\r\n    margin-right: auto;\r\n    p {\r\n        margin: 0;\r\n        color: ${props => props.message === 'Info saved' ? '#95ffb1;' : '#ffdb77;'}\r\n    }\r\n`;\r\n\r\nconst CallToRegister = styled.div`\r\n    width: 45%;\r\n    border: 2px solid #68A4C4;\r\n    border-radius: 10px;\r\n    letter-spacing: 1px;\r\n    box-shadow: 0 0 3px #ffffff6b;\r\n    margin: 9px;\r\n    margin-left: auto;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    p {\r\n        margin: 0;\r\n        color: #fefefe;\r\n        height: 38px;\r\n    }\r\n    a {\r\n        color: #fefefe;\r\n        text-decoration: none;\r\n        margin-left: 4px;\r\n        font-size: 1.2em;\r\n        &:hover {\r\n            color: #a2cce3;\r\n        }\r\n    }\r\n`;\r\n\r\nconst Spacer = styled.div`\r\n    width: 5%;\r\n`;\r\n\r\nconst Divider = styled.span`\r\n    display:inline-block;\r\n    height: 24px;\r\n    width: 2px;\r\n    border-left: 2px solid #68A4C4;\r\n    box-shadow: 0 0 3px #ffffff6b;\r\n    position: relative;\r\n    top: 6px;\r\n    margin: 0 7px;\r\n`;\r\n\r\nfunction Dashboard({printHandle, workingThemeSet, themeChangeHandle, userInfoBackupHandle, flashMessage, flashMessageExpire, loggedIn}) {\r\n    const themeContext = useContext(ThemeContext);\r\n    const [allThemes, setAllThemes] = useState(getFromLS('all-themes').data);\r\n    \r\n    useEffect(() => {\r\n        if (flashMessage) {\r\n            const flashTimeout = setTimeout(() => {\r\n                flashMessageExpire()\r\n            }, 3000)\r\n\r\n            return () => clearTimeout(flashTimeout);\r\n        }\r\n    }, [flashMessage, flashMessageExpire]);\r\n\r\n    const camelize = (str) => {\r\n        return str.replace(/(?:^\\w|[A-Z]|\\b\\w)/g, function(word, index) {\r\n          return index === 0 ? word.toLowerCase() : word.toUpperCase();\r\n        }).replace(/\\s+/g, '');\r\n    }\r\n\r\n    const ensureNameUniqueness = (name) => {\r\n        const allThemeNames = Object.values(allThemes).map((theme) => theme.name);\r\n\r\n        if (!allThemeNames.includes(name)) {\r\n            return name;\r\n        }\r\n\r\n        // Add incrementing number to name until it is unique\r\n        let i = 1;\r\n\r\n        while (allThemeNames.includes(name + i.toString())) {\r\n            i += 1;\r\n        }\r\n\r\n        return name + i.toString();\r\n    }\r\n\r\n    const deleteTheme = (themeName) => {\r\n        const nameCamelized = camelize(themeName);\r\n        const { [nameCamelized]: _, ...newAllThemes } = allThemes;\r\n        console.log('taco')\r\n        console.log(allThemes)\r\n        // nested for localstorage\r\n        const allThemesLS = {};\r\n        allThemesLS['data'] = {...newAllThemes};\r\n\r\n        setAllThemes({...newAllThemes});\r\n        setToLS('all-themes', allThemesLS);\r\n    }\r\n    const saveCreatedTheme = () => {\r\n        // Duplicate working theme, give it unique id, ensure name uniqueness\r\n        let workingTheme = {...themeContext};\r\n        workingTheme.id = uuidv4();\r\n        workingTheme.name = ensureNameUniqueness(workingTheme.name);\r\n\r\n        // Format it to fit allThemes and combine\r\n        let newThemeData = {};\r\n        newThemeData[camelize(workingTheme[\"name\"])] = {...workingTheme};\r\n\r\n        // nested for localstorage\r\n        const allThemesLS = {};\r\n        allThemesLS['data'] = {...allThemes, ...newThemeData};\r\n   \r\n        // Add to all themes and set with default name\r\n        setAllThemes({...allThemes, ...newThemeData});\r\n        setToLS('all-themes', allThemesLS);\r\n        workingThemeSet({...workingTheme, ...{name: \"New Theme\"}});\r\n    }\r\n\r\n    if (!loggedIn) {\r\n        return (\r\n            <DashboardWrapper>\r\n                <DashButton \r\n                    className=\"btn btn-print-cv\"\r\n                    onClick={printHandle}>\r\n                    Print / Save PDF\r\n                </DashButton>\r\n                <Spacer></Spacer>\r\n                <ThemeSelector \r\n                    workingThemeSet={workingThemeSet} \r\n                    allThemes={allThemes}\r\n                />\r\n                <CallToRegister>\r\n                    <p>Create a theme! <Link to='/login'>Login</Link> <Divider></Divider> <Link to='/register'>Register</Link></p>\r\n                </CallToRegister>\r\n            </DashboardWrapper>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <DashboardWrapper>\r\n            <DashButton \r\n\t\t\t\tclassName=\"btn btn-print-cv\"\r\n\t\t\t\tonClick={printHandle}>\r\n\t\t\t\tPrint / Save PDF\r\n\t\t\t</DashButton>\r\n            <DashButton\r\n                className=\"btn btn-print-cv\"\r\n                onClick={userInfoBackupHandle}>\r\n                Save Info\r\n            </DashButton>\r\n            <FlashMessageContainer message={flashMessage}>\r\n                {flashMessage &&\r\n                    <p>{flashMessage}</p>\r\n                }                \r\n            </FlashMessageContainer>\r\n\t\t\t<ThemeSelector \r\n                workingThemeSet={workingThemeSet} \r\n                allThemes={allThemes}\r\n                themeDelete={deleteTheme}\r\n            />\r\n            <CreateTheme \r\n                themeChangeHandle={themeChangeHandle}\r\n                createdThemeSave={saveCreatedTheme}\r\n            />\r\n        </DashboardWrapper>\r\n    );\r\n}\r\n\r\nexport default Dashboard;","import React from \"react\";\r\n\r\nfunction CVInput( {inputName, currentValue, inputType, labelContent, section, inputChangeHandle} ) {\r\n    \r\n    const handleInputChange = (event) => {\r\n        inputChangeHandle(event, section);\r\n    }\r\n\r\n    return (\r\n        <div className=\"form-floating mb-3\">\r\n            {inputType === 'textarea' \r\n            ? <textarea \r\n                id={inputName}\r\n                name={inputName}\r\n                value={currentValue || ''}\r\n                type={inputType} \r\n                className=\"form-control mb-3 text-area\"\r\n                rows=\"6\"\r\n                cols=\"40\"\r\n                onChange={handleInputChange}\r\n            ></textarea>\r\n            : <input \r\n                id={inputName}\r\n                name={inputName}\r\n                value={currentValue || ''}\r\n                type={inputType} \r\n                className=\"form-control mb-3\"\r\n                onChange={handleInputChange}\r\n            />\r\n            }\r\n            <label \r\n                htmlFor={inputName} \r\n                className=\"form-label\">\r\n                {labelContent}\r\n            </label>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CVInput;","import React from 'react';\r\nimport CVInput from './cv-input';\r\n\r\nfunction CVForm({fields, section, inputChangeHandle, formDisplay}) {\r\n \r\n    const displayForm = () => {\r\n        formDisplay(null);\r\n    }\r\n\r\n    function capitalizeFirstLetter(string) {\r\n        return string.charAt(0).toUpperCase() + string.slice(1);\r\n    }\r\n\r\n    return(\r\n        <div className=\"form-modal\">\r\n            <div className=\"form-container\">\r\n                <i \r\n                    className=\"bi bi-x-square close-form\"\r\n                    onClick={displayForm}\r\n                ></i>\r\n                <h2>{capitalizeFirstLetter(section)}</h2>\r\n                <p className=\"mb-3\">(Unused fields will not show up on the CV)</p>\r\n                <form>\r\n                    {\r\n                        Object.entries(fields).map(([inputName, inputInfo]) => {\r\n                            return (\r\n                                <CVInput \r\n                                    inputName={inputName}\r\n                                    currentValue={inputInfo[0]}\r\n                                    inputType={inputInfo[1]}\r\n                                    labelContent={inputInfo[2]}\r\n                                    section={section}\r\n                                    key={inputName}\r\n                                    inputChangeHandle={inputChangeHandle}\r\n                                />                 \r\n                            );\r\n                        }) \r\n                    }\r\n                    <button\r\n                        className=\"btn btn-primary\"\r\n                        onClick={displayForm}\r\n                        type=\"button\"\r\n                    >Done</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CVForm;","import React from 'react';\r\nimport CVInput from './cv-input';\r\n\r\nfunction DeletableFieldGroup({fields, section, groupNum, inputChangeHandle, fieldGroupDelete}) {\r\n\r\n    const deleteFieldGroup = () => {\r\n        fieldGroupDelete(fields, section)\r\n    }\r\n        \r\n    return (\r\n        <fieldset>\r\n            {groupNum > 0 &&\r\n            <i \r\n                className=\"bi bi-x-square close-input-group\"\r\n                onClick={() => deleteFieldGroup()}\r\n            ></i> }  \r\n            {\r\n                Object.entries(fields).map(([inputName, inputInfo]) => {\r\n                    return (\r\n                        <CVInput \r\n                            inputName={inputName}\r\n                            currentValue={inputInfo[0]}\r\n                            inputType={inputInfo[1]}\r\n                            labelContent={inputInfo[2]}\r\n                            section={section}\r\n                            key={inputName}\r\n                            inputChangeHandle={inputChangeHandle}\r\n                        />                 \r\n                    );\r\n                }) \r\n            }\r\n        </fieldset>\r\n    );\r\n}\r\n\r\nexport default DeletableFieldGroup;\r\n","import React from 'react';\r\nimport DeletableFieldGroup from './deletable-field-group';\r\n\r\nfunction CVDynamicForm({fields, section, inputChangeHandle, fieldGroupCreate, fieldGroupDelete, formDisplay}) {\r\n \r\n    const displayForm = () => {\r\n        formDisplay(null);\r\n    }\r\n\r\n    function capitalizeFirstLetter(string) {\r\n        return string.charAt(0).toUpperCase() + string.slice(1);\r\n    }\r\n\r\n    function splitCamelCaseString(string) {\r\n        return string.split(/(?=[A-Z])/).join(' ')\r\n    }\r\n\r\n    function groupTheFields(fields) {\r\n        /* [{field1: displayStr, alsoField1: displayStr}, {field2: displayStr, ...}, ...]*/\r\n        let groupedFields = [];\r\n\r\n        Object.keys(fields).forEach((field) => {\r\n            const groupNum = field.charAt(field.length - 1);\r\n            if (!groupedFields[groupNum]) {\r\n                groupedFields[groupNum] = {}\r\n            }\r\n            groupedFields[groupNum][field] = fields[field];\r\n        });\r\n\r\n        return groupedFields;\r\n    }\r\n\r\n    const createFieldGroup = (groupedFields) => {\r\n        // Creates new field group to add to state\r\n        /* {field3: ['', 'tel', 'Phone', '555-555-5555'], alsoField3: [...], ...}*/\r\n        const newGroup = {};\r\n        const newGroupNum = groupedFields.length;\r\n\r\n        const firstGroupCopy = JSON.parse(JSON.stringify(groupedFields[0]));\r\n\r\n        Object.keys(firstGroupCopy).forEach((field) => {\r\n            // Copy field name, but with new groupNum, and copy inputInfo\r\n            const newFieldName = field.slice(0, -1) + newGroupNum;\r\n            newGroup[newFieldName] = firstGroupCopy[field];\r\n\r\n            // Clear input value of inputInfo\r\n            newGroup[newFieldName][0] = null;\r\n        })\r\n\r\n        fieldGroupCreate(newGroup, section);\r\n    }\r\n\r\n    const groupedFields = groupTheFields(fields)\r\n    const prettifiedSectionName = splitCamelCaseString(capitalizeFirstLetter(section));\r\n    return(\r\n        <div className=\"form-modal\">\r\n            <div className=\"form-container\">\r\n                <i \r\n                    className=\"bi bi-x-square close-form\"\r\n                    onClick={displayForm}\r\n                ></i>\r\n                <h2>{prettifiedSectionName}</h2>\r\n                <p className=\"mb-3\">(Unused fields will not show up on the CV)</p>\r\n                <form>\r\n                    {\r\n                        groupedFields.map((group, groupNum) => {\r\n                            return (\r\n                                <DeletableFieldGroup \r\n                                    fields={group}\r\n                                    groupNum={groupNum}\r\n                                    inputChangeHandle={inputChangeHandle}\r\n                                    fieldGroupDelete={fieldGroupDelete}\r\n                                    section={section}\r\n                                    key={section + groupNum}\r\n                                />\r\n                            );\r\n                        })\r\n                    }\r\n                </form>\r\n                <div\r\n                    className=\"btn btn-outline-primary mb-3 create-field-group\"\r\n                    onClick={() => createFieldGroup(groupedFields)} >\r\n                    <i className=\"bi bi-plus-square add-icon\"></i>\r\n                    Add {prettifiedSectionName}\r\n                </div>\r\n                <br />\r\n                <button\r\n                    className=\"btn btn-primary\"\r\n                    onClick={displayForm}\r\n                    type=\"button\"\r\n                >Done</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CVDynamicForm;","import React from 'react';\r\n\r\nfunction CVImageForm({section, imageChangeHandle, formDisplay}) {\r\n    \r\n    const displayForm = () => {\r\n        formDisplay(null);\r\n    }\r\n\r\n    function capitalizeFirstLetter(string) {\r\n        return string.charAt(0).toUpperCase() + string.slice(1);\r\n    }\r\n\r\n    const handleImageChange = (e) => {\r\n        e.preventDefault();\r\n\r\n        let reader = new FileReader();\r\n        let file = e.target.files[0];\r\n\r\n        reader.onloadend = () => {\r\n            imageChangeHandle(reader.result);\r\n        }\r\n\r\n        reader.readAsDataURL(file);\r\n    } \r\n    \r\n    return(\r\n        <div className=\"form-modal\">\r\n            <div className=\"form-container\">\r\n                <i \r\n                    className=\"bi bi-x-square close-form\"\r\n                    onClick={displayForm}\r\n                ></i>\r\n                <h2>{capitalizeFirstLetter(section)}</h2>\r\n                <form>\r\n                <div class=\"mb-3\">\r\n                    <label htmlFor=\"portait-file\" class=\"form-label mb-3\">(Recommended size {'\\u2248'} 400 x 400 pixels)</label>\r\n                    <input \r\n                        type=\"file\" \r\n                        className=\"form-control\"\r\n                        name=\"portrait-file\" \r\n                        id=\"portrait-file\" \r\n                        onChange={(e) => handleImageChange(e)}\r\n                    />\r\n                </div>\r\n                    <button\r\n                        className=\"btn btn-primary\"\r\n                        onClick={displayForm}\r\n                        type=\"button\"\r\n                    >Done</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CVImageForm;\r\n","import React, { useState, useRef, useEffect, useCallback} from 'react';\r\nimport CV from './cv';\r\nimport Dashboard from './dashboard/dashboard';\r\n\r\n// Form imports\r\nimport CVForm from './user-info-forms/cv-form';\r\nimport CVDynamicForm from './user-info-forms/cv-dynamic-form';\r\nimport CVImageForm from './user-info-forms/cv-image-form';\r\n\r\n// React to print\r\nimport { useReactToPrint } from 'react-to-print';\r\n\r\n// Theme hook\r\nimport { useTheme } from '../../theme/useTheme.jsx';\r\n\r\n// Styled-components\r\nimport styled from 'styled-components';\r\nimport { ThemeProvider } from 'styled-components';\r\n\r\n// Axios\r\nimport axios from 'axios';\r\n\r\n// Localstorage\r\nimport { getFromLS } from '../../utils/storage';\r\n\r\n// Webfont\r\nimport WebFont from 'webfontloader';\r\n\r\n\r\nconst CVCreatorWrapper = styled.div`\r\n\tdisplay: flex;\r\n    background-color: #1e4356;\r\n    z-index: 10;\r\n`;\r\n\r\nconst Creator = styled.div`\r\n\tmargin: 120px auto 0 auto;\r\n    z-index: 5;\r\n    background-color: #1e4356b0;\r\n    border-radius: 8px;\r\n    box-shadow: 0 0 3px #ffffff4d;\r\n    text-align: center;\r\n`;\r\n\r\nfunction CVCreator(props) {\r\n\t// Ref used for ReactToPrint\r\n\tconst CVRef = useRef();\r\n\r\n\t// Pull from usedTheme hook, created needed local states\r\n\r\n\tconst {theme} = useTheme();\r\n\tconst [workingTheme, setWorkingTheme] = useState(theme);\r\n\t\r\n\tuseEffect(() => {\r\n\t\t// Working theme should be name New Theme when first loaded\r\n\t\tsetWorkingTheme({...theme, ...{name: 'New Theme'}});\r\n\t}, [theme]);\r\n\r\n\t// When Logging out, reset theme and apply fonts(fontloader is in hidden theme creator)\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!props.loggedIn) {\r\n\t\t\tsetWorkingTheme({...theme, ...{name: 'New Theme'}});\r\n\t\t\tconst hFontVal = workingTheme.headerFont;\r\n            const cFontVal = workingTheme.contentFont;\r\n            \r\n            WebFont.load({\r\n                google: {\r\n                    families: [hFontVal, cFontVal]\r\n                }\r\n            });\r\n\t\t}\r\n\t}, [props.loggedIn, theme, workingTheme.headerFont, workingTheme.contentFont])\r\n\r\n\t/* State for user info */\r\n\r\n\tconst [contactFields, setContactFields] = useState({\r\n\t\tphone: [null, 'tel', 'Phone', '555-555-5555'],\r\n\t\temail: [null, 'email', 'Email', 'email@me.com'],\r\n\t\tportfolio: [null, 'url', 'Portfolio', 'www.portfolio.com'],\r\n\t\tgithub: [null, 'url', 'Github', 'github.com/me'],\r\n\t\tlinkedIn: [null, 'url', 'LinkedIn', ''],\r\n\t\tinstagram: [null, 'url', 'Instagram', ''],\r\n\t\tyoutube: [null, 'url', 'Youtube', ''],\r\n\t\tfacebook: [null, 'url', 'Facebook', ''],\r\n\t});\r\n\t\r\n\tconst [educationFields, setEducationFields] = useState({\r\n\t\tdegree_0: [null, 'text', 'Degree', 'Bachelors of a Field'],\r\n\t\tinstitution_0: [null, 'text', 'Institution', 'University of a State'],\r\n\t\ttimeToDegree_0: [null, 'text', 'Time to Degree', '2014-2018'],\r\n\t\tdegree_1: [null, 'text', 'Degree', 'Bachelors of a Field'],\r\n\t\tinstitution_1: [null, 'text', 'Institution', 'University of a State'],\r\n\t\ttimeToDegree_1: [null, 'text', 'Time to Degree', '2014-2018'],\r\n\t});\r\n\r\n\tconst [skillsFields, setSkillsFields] = useState({\r\n\t\tskillType_0: [null, 'text', 'Skill Heading', '/ / Technical'],\r\n\t\tskill_A0: [null, 'text', 'Skill', 'Making list items'],\r\n\t\tskill_B0: [null, 'text', 'Skill', 'Making list items'],\r\n\t\tskill_C0: [null, 'text', 'Skill', 'Making list items'],\r\n\t\tskill_D0: [null, 'text', 'Skill', 'Making list items'],\r\n\t\tskill_E0: [null, 'text', 'Skill', 'Making list items'],\r\n\t\tskill_F0: [null, 'text', 'Skill', ''],\r\n\t\tskill_G0: [null, 'text', 'Skill', ''],\r\n\t\tskill_H0: [null, 'text', 'Skill', ''],\r\n\t\tskill_I0: [null, 'text', 'Skill', ''],\r\n\t\tskillType_1: [null, 'text', 'Skill Heading', '/ / Soft'],\r\n\t\tskill_A1: [null, 'text', 'Skill', 'Being well liked'],\r\n\t\tskill_B1: [null, 'text', 'Skill', 'Being well liked'],\r\n\t\tskill_C1: [null, 'text', 'Skill', 'Being well liked'],\r\n\t\tskill_D1: [null, 'text', 'Skill', 'Being well liked'],\r\n\t\tskill_E1: [null, 'text', 'Skill', ''],\r\n\t\tskill_F1: [null, 'text', 'Skill', ''],\r\n\t\tskill_G1: [null, 'text', 'Skill', ''],\r\n\t\tskill_H1: [null, 'text', 'Skill', ''],\r\n\t});\r\n\r\n\tconst [introductionFields, setIntroductionFields] = useState({\r\n\t\tgivenName: [null, 'text', 'First Name', 'Given'],\r\n\t\tsurname: [null, 'text', 'Last Name', 'Surname'],\r\n\t\ttitle: [null, 'text', 'Professional Title', 'Professional Title'],\r\n\t\tabout: [null, 'textarea', 'About', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.'],\r\n\t});\r\n\r\n\tconst [workExperienceFields, setWorkExperienceFields] = useState({\r\n\t\tcompany_0: [null, 'text', 'Company', 'Company Name'],\r\n\t\tposition_0: [null, 'text', 'Position', '/ Position Title'],\r\n\t\tduration_0: [null, 'text', 'Tenure', 'From 2018 to 2020'],\r\n\t\tsummary_0: [null, 'text', 'Position Summary', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod'],\r\n\t\tachievement_A0: [null, 'text', 'Achievement', 'Made x money doing y things'],\r\n\t\tachievement_B0: [null, 'text', 'Achievement', 'Made x money doing y things'],\r\n\t\tachievement_C0: [null, 'text', 'Achievement', 'Made x money doing y things'],\r\n\t\tachievement_D0: [null, 'text', 'Achievement', ''],\r\n\t\tachievement_E0: [null, 'text', 'Achievement', ''],\r\n\t\tcompany_1: [null, 'text', 'Company', 'Company Name'],\r\n\t\tposition_1: [null, 'text', 'Position', '/ Position Title'],\r\n\t\tduration_1: [null, 'text', 'Tenure', 'From 2018 to 2020'],\r\n\t\tsummary_1: [null, 'text', 'Position Summary', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod'],\r\n\t\tachievement_A1: [null, 'text', 'Achievement', 'Made x money doing y things'],\r\n\t\tachievement_B1: [null, 'text', 'Achievement', 'Made x money doing y things'],\r\n\t\tachievement_C1: [null, 'text', 'Achievement', 'Made x money doing y things'],\r\n\t\tachievement_D1: [null, 'text', 'Achievement', ''],\r\n\t\tachievement_E1: [null, 'text', 'Achievement', ''],\r\n\t\tachievement_F1: [null, 'text', 'Achievement', ''],\r\n\t});\r\n\r\n\t//console.log(workExperienceFields);\r\n\t\r\n\tconst [portraitFields, setPortraitFields] = useState({\r\n\t\timage: [null],\r\n\t});\r\n\r\n\t/* For dynamic access to fields and setters*/\r\n\r\n\tconst allFields = {\r\n\t\tcontact: contactFields,\r\n\t\teducation: educationFields,\r\n\t\tskills: skillsFields,\r\n\t\tintroduction: introductionFields,\r\n\t\tworkExperience: workExperienceFields,\r\n\t}\r\n\r\n\tconst allFieldSetters = {\r\n\t\tcontact: setContactFields,\r\n\t\teducation: setEducationFields,\r\n\t\tskills: setSkillsFields,\r\n\t\tintroduction: setIntroductionFields,\r\n\t\tworkExperience: setWorkExperienceFields,\r\n\t}\r\n\t\r\n\t/* \tThese functions convert MongoDb's nested state to\r\n\t\tthis React Apps flattened state, which uses\r\n\t\tClassification Tags in the key to distinguish\r\n\t\tdata: '0' for Groups 'A' for list items.\r\n\t*/\r\n\r\n\tfunction groupSansClassificationTags(section) {\r\n\t\t/*\tGrabs fields group from state of dynamic\r\n\t\t\tsection and strips tags so that the fields\r\n\t\t\tarray can be applied to mongodb data before\r\n\t\t\ttags are added back on\r\n\t\t*/\r\n\t\tconst sectionFields = allFields[section];\r\n        let groupSansClassificationTags = {};\r\n\r\n        Object.keys(sectionFields).sort().forEach((fieldKey) => {\r\n\t\t\tconst keyWithoutTag = fieldKey.split('_')[0];\r\n\t\t\tif (!groupSansClassificationTags[keyWithoutTag]) {\r\n\t\t\t\tgroupSansClassificationTags[keyWithoutTag] = [...sectionFields[fieldKey]];\r\n\t\t\t}\r\n        });\r\n\r\n        return groupSansClassificationTags;\r\n    }\r\n\t\t\t\r\n\tconst updateStateWithMongoData = (mongoInfo, section) => {\r\n\t\tconst newState = {};\r\n\r\n\t\tif (Array.isArray(mongoInfo)) {\r\n\t\t\tconst gWithoutClassification = groupSansClassificationTags(section);\r\n\r\n\t\t\tmongoInfo.forEach((group, i) => {\r\n\t\t\t\tconst groupTag = i.toString();\r\n\r\n\t\t\t\tObject.keys(group).filter(key => key !== '_id').forEach((key) => {\r\n\t\t\t\t\tconst data = group[key];\r\n\t\t\t\t\tconst fieldsCopy = [...gWithoutClassification[key]];\r\n\r\n\t\t\t\t\tif (Array.isArray(data)) {\r\n\t\t\t\t\t\tdata.forEach((listItem, iter) => {\r\n\t\t\t\t\t\t\tconst listItemTag = String.fromCharCode(65 + iter);\r\n\t\t\t\t\t\t\tconst fieldsCopyCopy = [...fieldsCopy];\r\n\r\n\t\t\t\t\t\t\tfieldsCopy[0] = listItem;\r\n\t\t\t\t\t\t\tnewState[key.concat('_', listItemTag, groupTag)] = fieldsCopyCopy;\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tfieldsCopy[0] = data;\r\n\t\t\t\t\t\tnewState[key.concat('_', groupTag)] = fieldsCopy;\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t} else { // For nondynamic sections\r\n\t\t\t// Copy field array, replace [0] with user info, add to new state obj\r\n\t\t\tObject.keys(mongoInfo).forEach((key) => {\r\n\t\t\t\tif (key !== '_id') {\r\n\t\t\t\t\tconst sectionFields = allFields[section];\r\n\t\r\n\t\t\t\t\tconst newField = [...sectionFields[key]];\r\n\t\t\t\t\tnewField[0] = mongoInfo[key];\r\n\t\r\n\t\t\t\t\tnewState[key] = newField;\r\n\t\t\t\t};\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tallFieldSetters[section]((prevState) => {\r\n\t\t\treturn({ ...prevState, ...newState });\r\n\t\t})\r\n\t}\r\n\r\n\tconst userInfoLoaded = useRef(false);\r\n\r\n\t// Props have been loaded from login redirect and hadn't been there before\r\n\tif (props.location.state && !userInfoLoaded.current) { \r\n\t\tconst userInfo = props.location.state.userInfo;\r\n\t\t\r\n\t\tuserInfoLoaded.current = true;\r\n\t\t\r\n\t\tObject.entries(userInfo).forEach(([section, data]) => {\r\n\t\t\tupdateStateWithMongoData(data, section);\r\n\t\t});\r\n\t}\r\n\r\n\tconst [localLoggedInStatus, setLocalLoggedInStatus] = useState(false);\r\n\r\n\t// Clear user info when log out occurs\r\n\tif (props.loggedIn !== localLoggedInStatus) {\r\n\t\t\r\n\t\tsetLocalLoggedInStatus(props.loggedIn);\r\n\r\n\t\tif (!props.loggedIn) {\r\n\t\t\tObject.entries(allFields).forEach(([section, fields]) => {\r\n\t\t\t\tconst newState = {}\r\n\r\n\t\t\t\tObject.entries(fields).forEach(([key, fields]) => {\r\n\t\t\t\t\tconst fieldsCopy = [...fields];\r\n\t\t\t\t\tfieldsCopy[0] = null;\r\n\r\n\t\t\t\t\tnewState[key] = fieldsCopy;\r\n\t\t\t\t})\r\n\r\n\t\t\t\tallFieldSetters[section]((prevState) => {\r\n\t\t\t\t\treturn {...prevState, ...newState};\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\taxios({\r\n\t\t\t\tmethod: 'GET',\r\n\t\t\t\turl: 'https://fathomless-dusk-73604.herokuapp.com/user/userinfo',\r\n\t\t\t\theaders: { Authorization: `Bearer ${getFromLS('token')}`},\r\n\t\t\t}).then( response => {\r\n\t\t\t\tObject.entries(response.data.userInfo).forEach(([section, data]) => {\r\n\t\t\t\t\tupdateStateWithMongoData(data, section);\r\n\t\t\t\t});\r\n\t\t\t}).catch( error => {\r\n\t\t\t\tsetFlashMessage('Info unavailable');\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\t\r\n\r\n\t/* \tThese functions convert Reacts flattened state to\r\n\t\tMongoDB's nested state.\r\n\t*/\r\n\r\n\tconst stateWithOnlyCurrentValueField = (sectionFields) => {\r\n\t\t/* {key: value, key2: value2, ...} */\r\n\t\tlet currentValueState = {};\r\n\r\n\t\tObject.entries(sectionFields).forEach(([key, fields]) => {\r\n\t\t\tcurrentValueState[key] = fields[0];\r\n\t\t})\r\n\r\n\t\treturn currentValueState;\r\n\t}\r\n\r\n\tconst [flashMessage, setFlashMessage] = useState(null);\r\n\r\n\tconst expireFlashMessage = useCallback(() => {\r\n\t\tsetFlashMessage(null);\r\n\t}, [setFlashMessage]);\r\n\r\n\tconst exportStateInMongoFormat = () => {\r\n\t\tconst mongoFormattedState = {};\r\n\r\n\t\tObject.entries(allFields).forEach(([section, sectionFields]) => {\r\n\t\t\tconst currentValueState = stateWithOnlyCurrentValueField(sectionFields);\r\n\t\t\tconst sampleKey = Object.keys(currentValueState)[0];\r\n\r\n\t\t\tif (sampleKey.split('_').length === 1) { // Non dynamic sections copy over\r\n\t\t\t\tmongoFormattedState[section] = currentValueState;\t\r\n\t\t\t} else {\r\n\t\t\t\tmongoFormattedState[section] = [];\r\n\t\t\t\tmongoFormattedState[section][0] = {};\r\n\r\n\t\t\t\t// Keys must be sorted to maintain listTag ordering\r\n\t\t\t\tObject.keys(currentValueState).sort().forEach((fieldKey) => {\r\n\t\t\t\t\tconst taglessKey = fieldKey.split('_')[0];\r\n\t\t\t\t\tconst tag = fieldKey.split('_')[1];\r\n\t\t\t\t\tconst groupTag = tag.slice(-1);\r\n\t\t\t\t\tconst listItemTag = tag.slice(-2, -1); // Empty string if 1 character tag\r\n\t\t\t\t\tconst currentValue = currentValueState[fieldKey];\r\n\r\n\t\t\t\t\tif (!mongoFormattedState[section][groupTag]) { // Creat group object if it doesn't exist\r\n\t\t\t\t\t\tmongoFormattedState[section][groupTag] = {}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst group = mongoFormattedState[section][groupTag];\r\n\r\n\t\t\t\t\tif (!listItemTag) { // Non-listitems can be copied into group objects \r\n\t\t\t\t\t\tgroup[taglessKey] = currentValue;\r\n\t\t\t\t\t} else { // else a list array is needed\r\n\t\t\t\t\t\tif (!group[taglessKey]) {\r\n\t\t\t\t\t\t\tgroup[taglessKey] = [];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tgroup[taglessKey].push(currentValue);\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t}\r\n\r\n\t\t})\r\n\t\t\r\n\t\taxios({\r\n            method: 'PUT',\r\n            url: 'https://fathomless-dusk-73604.herokuapp.com/user/userinfo',\r\n\t\t\theaders: { Authorization: `Bearer ${getFromLS('token')}`},\r\n            data: {\r\n                userInfo: mongoFormattedState\r\n            }\r\n        }).then( response => {\r\n            setFlashMessage('Info saved');\r\n        }).catch( error => {\r\n            setFlashMessage('Save unsuccessful');\r\n        })\r\n\t}\r\n\t\r\n\t// Form Toggle\r\n\r\n\tconst [displayForm, setDisplayForm] = useState(null);\r\n\r\n\t/* Event handlers */\r\n\r\n\t// For backing up data\r\n\tconst handleUserInfoBackup = () => {\r\n\t\texportStateInMongoFormat();\r\n\t}\r\n\r\n\t// For theme\r\n\r\n\tconst handleThemeChange = (event) => {\r\n\t\tconst name = event.target.name;\r\n\t\tconst value = event.target.value;\r\n\r\n\t\tconst newInputObject = {[name]: value};\r\n\r\n\t\tsetWorkingTheme((prevState) => {\r\n\t\t\treturn {...prevState, ...newInputObject};\r\n\t\t});\r\n\t}\r\n\r\n\t// For userInfo\r\n\r\n\tconst handleInputChange = (event, section) => {\r\n\t\tconst sectionFields = allFields[section];\r\n\t\tconst name = event.target.name;\r\n\t\t\r\n\t\t// Convert empty string to null to remove unused fields\r\n\t\tlet value = event.target.value;\r\n\t\tif (value === '') {\r\n\t\t\tvalue = null;\r\n\t\t}\r\n\r\n\t\tlet inputField = sectionFields[name].slice();\r\n\t\tinputField[0] = value;\r\n\t\t\r\n\t\tconst newInputObject = {[name]: inputField};\r\n\r\n\t\tallFieldSetters[section]((prevState) => {\r\n\t\t\treturn {...prevState, ...newInputObject};\r\n\t\t});\r\n\t}\r\n\r\n\tconst handleImageChange = (result) => {\r\n\t\tconst imageChangeObject = {image: [result]};\r\n\t\r\n\t\tsetPortraitFields((prevState) => {\r\n\t\t\treturn {...prevState, ...imageChangeObject};\r\n\t\t});\r\n\t}\r\n\r\n\t// For dynamic forms\r\n\r\n\tconst createFieldGroup = (group, section) => {\r\n\t\tallFieldSetters[section]((prevState) => {\r\n\t\t\treturn {...prevState, ...group}\r\n\t\t})\r\n\t}\r\n\r\n\tconst deleteFieldGroup = (fields, section) => {\r\n\t\tallFieldSetters[section]((prevState) => {\r\n\t\t\tconst newState = {...prevState};\r\n\t\t\t\r\n\t\t\tObject.keys(fields).forEach((field) => delete newState[field]);\r\n\r\n    \t\treturn newState;\r\n\t\t});\r\n\t}\r\n\r\n\t// Display form\r\n\r\n\tconst displaySectionForm = (section) => {\r\n\t\tsetDisplayForm(section);\r\n\t}\r\n\r\n\t// For printing\r\n\r\n\tconst handlePrint = useReactToPrint({\r\n\t\tcontent: () => CVRef.current,\r\n\t});\r\n\r\n\t/*  When all field values are null, the cv is populated\r\n\t\tby the placeholder [3] text instead of the input [0]. \r\n\t\tThis provides a readily available design guide for \r\n\t\tthe template.\r\n\t*/\r\n\r\n\tconst allInputValuesNull = (flds) => {\r\n\t\treturn Object.values(flds).every((inputInfo) => {\r\n\t\t\treturn inputInfo[0] === null;\r\n\t\t});\r\n\t}\r\n\r\n\tconst determineDataDisplayed = (fields) => {\r\n\t\t/* {field1: displayStr, field2: displayStr, ...}*/\r\n\t\tconst displayData = {}\r\n\t\t\t\t\r\n\t\tconst inputValuesNull = allInputValuesNull(fields);\r\n\t\tconst displayIndex = inputValuesNull ? 3 : 0;\r\n\r\n\t\tObject.keys(fields).forEach((field) => { \r\n\t\tdisplayData[field] = fields[field][displayIndex];\r\n\t\t})\r\n\r\n\t\treturn displayData;\r\n\t}\r\n\r\n\t/* Determine form for section calling it */\r\n\r\n\tconst getFormType = (section) => {\r\n\t\tif (section === null) return null;\r\n\r\n        const dynamicSections = [\r\n\t\t\t'skills',\r\n            'education',\r\n\t\t\t'workExperience',\r\n        ];\r\n\r\n\t\tif (dynamicSections.includes(section)) {\r\n\t\t\treturn 'dynamic';\r\n\t\t} else if (section === 'portrait') {\r\n\t\t\treturn 'image';\r\n\t\t} else {\r\n\t\t\treturn 'form';\r\n\t\t}\r\n    }\r\n\r\n\tconst formType = getFormType(displayForm);\r\n\r\n\treturn (\r\n\t\t<CVCreatorWrapper>\r\n\t\t\t<Creator>\r\n\t\t\t\t<ThemeProvider theme={workingTheme}>\r\n\t\t\t\t\t<Dashboard \r\n\t\t\t\t\tprintHandle={handlePrint} \r\n\t\t\t\t\tworkingThemeSet={setWorkingTheme}\r\n\t\t\t\t\tthemeChangeHandle={handleThemeChange}\r\n\t\t\t\t\tuserInfoBackupHandle={handleUserInfoBackup}\r\n\t\t\t\t\tflashMessage={flashMessage}\r\n\t\t\t\t\tflashMessageExpire={expireFlashMessage}\r\n\t\t\t\t\tloggedIn={props.loggedIn}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<CV \r\n\t\t\t\t\t\tportrait={determineDataDisplayed(portraitFields)}\r\n\t\t\t\t\t\tcontact={determineDataDisplayed(contactFields)}\r\n\t\t\t\t\t\teducation={determineDataDisplayed(educationFields)}\r\n\t\t\t\t\t\tskills={determineDataDisplayed(skillsFields)}\r\n\t\t\t\t\t\tintroduction={determineDataDisplayed(introductionFields)}\r\n\t\t\t\t\t\tworkExperience={determineDataDisplayed(workExperienceFields)}\r\n\t\t\t\t\t\tformDisplay={displaySectionForm}\r\n\t\t\t\t\t\tref={CVRef}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</ThemeProvider>\r\n\t\t\t\t{formType === 'form' &&\r\n\t\t\t\t\t<CVForm \r\n\t\t\t\t\t\tfields={allFields[displayForm]}\r\n\t\t\t\t\t\tsection={displayForm} \r\n\t\t\t\t\t\tinputChangeHandle={handleInputChange}\r\n\t\t\t\t\t\tformDisplay={displaySectionForm}\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\t{formType === 'dynamic' &&\r\n\t\t\t\t\t<CVDynamicForm \r\n\t\t\t\t\t\tfields={allFields[displayForm]}\r\n\t\t\t\t\t\tsection={displayForm} \r\n\t\t\t\t\t\tinputChangeHandle={handleInputChange}\r\n\t\t\t\t\t\tformDisplay={displaySectionForm}\r\n\t\t\t\t\t\tfieldGroupDelete={deleteFieldGroup}\r\n\t\t\t\t\t\tfieldGroupCreate={createFieldGroup}\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\t{formType === 'image' &&\r\n\t\t\t\t\t<CVImageForm \r\n\t\t\t\t\t\tsection={displayForm} \r\n\t\t\t\t\t\timageChangeHandle={handleImageChange}\r\n\t\t\t\t\t\tformDisplay={displaySectionForm}\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t</Creator>\r\n\t\t</CVCreatorWrapper>\r\n\t);\r\n}\r\n\r\nexport default CVCreator;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nconst LogoContainer = styled.div`\r\n    transform: translateX(-50%);\r\n    left: 50%;\r\n    position: absolute;\r\n`;\r\n\r\nconst NavList = styled.ul`\r\n    list-style: none;\r\n    display: flex;\r\n    margin: 0;\r\n    padding: 0;\r\n    a {\r\n        text-decoration: none;\r\n        color: #ededed;\r\n        margin-left: 13px;\r\n        padding: 4px;\r\n        padding: 7px;\r\n        padding-bottom: 2px;\r\n        &:hover {\r\n            color: #ffffff;\r\n        }\r\n    }\r\n    button {\r\n        background: none;\r\n        color: inherit;\r\n        border: none;\r\n        font: inherit;\r\n        cursor: pointer;\r\n        outline: inherit;\r\n        color: #ededed;\r\n        margin-left: 13px;\r\n        font-size: 1rem;\r\n        &:hover {\r\n            color: #ffffff;\r\n        }\r\n    }\r\n`;\r\n\r\nfunction Header({loggedIn, logoutHandle}) {\r\n\r\n    return (\r\n        <header id=\"header\" className=\"d-flex align-items-center header-transparent\">\r\n            <div className=\"container d-flex align-items-center justify-content-end\">\r\n                <LogoContainer className=\"logo\">\r\n                    <h1 className=\"text-light\"><span>CVCreator</span></h1>\r\n                </LogoContainer>\r\n                <NavList>\r\n                    <li>\r\n                        <NavLink activeStyle={{boxShadow: '0 5px 3px -5px #ededed6b'}} exact to='/'>Home</NavLink>\r\n                    </li>\r\n                \r\n                    {loggedIn ?\r\n                        <li onClick={logoutHandle}>\r\n                            <button>Logout</button>\r\n                        </li>\r\n                        :\r\n                        <li>\r\n                            <NavLink activeStyle={{boxShadow: '0 5px 3px -5px #ededed6b'}} exact to='/login'>Login</NavLink>\r\n                        </li>\r\n                    }\r\n                </NavList>\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nfunction Hero(props) {\r\n    return (\r\n        <section id=\"hero\" className=\"d-flex justify-cntent-center align-items-center\">\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Hero;","import React from 'react';\r\n\r\nfunction Footer(props) {\r\n    return (\r\n        <footer>\r\n            <div className=\"footer-top\"></div>\r\n            <div className=\"copyright\">\r\n                &copy; Copyright <strong><span>Joshua Aldridge</span></strong>. All Rights Reserved\r\n            </div>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React, { useState } from 'react';\r\nimport { Form } from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router';\r\nimport { setToLS } from '../../utils/storage';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport CVInput from '../cv/user-info-forms/cv-input';\r\n\r\nconst AuthContainer = styled.div`\r\n    height: 90vh;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n`;\r\n\r\nconst FormContainer = styled.div`\r\n    background-color: #fefefee5;\r\n    padding: 30px;\r\n    border: 1px solid #888;\r\n    width: 500px;\r\n    box-shadow: 0 0 30px rgba(214, 215, 216, 0.2);\r\n    z-index: 5;\r\n    margin-top: 100px;\r\n`;\r\n\r\nconst AuthForm = styled(Form)`\r\n    input, .text-area {\r\n        border-radius: 2px;\r\n    }\r\n  \r\n    button {\r\n        background: #68A4C4;\r\n        border: 0;\r\n        padding: 10px 24px;\r\n        color: #fff;\r\n        transition: 0.4s;\r\n\r\n        &:hover {\r\n            background: #a2cce3;\r\n        }\r\n    }\r\n\r\n    a {\r\n        color: #32627b;\r\n        text-decoration: none;\r\n        margin-left: 4px;\r\n        &:hover {\r\n            color: #68A4C4;\r\n        }\r\n    }\r\n`;\r\n\r\nfunction LoginForm({loggedIn, loginHandle}) {\r\n    const [inputFields, setInputFields] = useState({\r\n        email: '',\r\n        password: ''\r\n    });\r\n    const [userInfo, setUserInfo] = useState(null);\r\n    const [error, setError] = useState(null);\r\n\r\n    const handleInputChange = (event) => {\r\n\t\tconst name = event.target.name;\t\r\n\t\tconst value = event.target.value;\r\n\r\n\t\tconst newInputObject = {[name]: value};\r\n\r\n\t\tsetInputFields((prevState) => {\r\n\t\t\treturn {...prevState, ...newInputObject};\r\n\t\t});\r\n\t}\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n      \r\n        axios({\r\n            method: 'POST',\r\n            url: 'https://fathomless-dusk-73604.herokuapp.com/auth/login',\r\n            data: {\r\n                email: inputFields.email,\r\n                password: inputFields.password\r\n            }\r\n        }).then( user => {\r\n            setToLS('token', user.data.token);\r\n            loginHandle();\r\n            setUserInfo(user.data.userInfo);\r\n        }).catch( error => {\r\n            setError(error);\r\n        })\r\n    }\r\n\r\n    if (userInfo) {\r\n        return (\r\n            <Redirect \r\n                to={{\r\n                    pathname: '/',\r\n                    state: {\r\n                        userInfo: userInfo\r\n                    }\r\n                }}\r\n            />\r\n        );\r\n    } else {\r\n        return (\r\n            <AuthContainer>\r\n                <FormContainer>\r\n                    <AuthForm onSubmit={handleSubmit}>\r\n                        <h2>Log In</h2>\r\n                        <p className=\"mb-3\">Not registered? \r\n                            <Link to='/register'>Register Now!</Link>\r\n                        </p>\r\n                        {error &&\r\n                            <p className=\"text-danger\">That email/password combination doesn't exist</p>}\r\n                        <CVInput  \r\n                            inputName=\"email\"\r\n                            currentValue= {inputFields.email}\r\n                            inputType=\"text\"\r\n                            labelContent=\"Email\"\r\n                            inputChangeHandle={handleInputChange}\r\n                        />\r\n                        <CVInput  \r\n                            inputName=\"password\"\r\n                            currentValue= {inputFields.password}\r\n                            inputType=\"password\"\r\n                            labelContent=\"Password\"\r\n                            inputChangeHandle={handleInputChange}\r\n                        />\r\n                        <button className=\"btn\">Log In</button>\r\n                    </AuthForm>\r\n                </FormContainer>\r\n            </AuthContainer>\r\n        );\r\n    } \r\n}\r\n\r\nexport default LoginForm;","import React, { useState } from 'react';\r\nimport { Form } from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport CVInput from '../cv/user-info-forms/cv-input';\r\n\r\nconst AuthContainer = styled.div`\r\n    height: 90vh;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n`;\r\n\r\nconst FormContainer = styled.div`\r\n    background-color: #fefefee5;\r\n    padding: 30px;\r\n    border: 1px solid #888;\r\n    width: 500px;\r\n    box-shadow: 0 0 30px rgba(214, 215, 216, 0.2);\r\n    z-index: 5;\r\n    margin-top: 100px;\r\n`;\r\n\r\nconst AuthForm = styled(Form)`\r\n    input, .text-area {\r\n        border-radius: 2px;\r\n    }\r\n  \r\n    button {\r\n        background: #68A4C4;\r\n        border: 0;\r\n        padding: 10px 24px;\r\n        color: #fff;\r\n        transition: 0.4s;\r\n\r\n        &:hover {\r\n            background: #a2cce3;\r\n        }\r\n    }\r\n\r\n    a {\r\n        color: #32627b;\r\n        text-decoration: none;\r\n        margin-left: 4px;\r\n        &:hover {\r\n            color: #68A4C4;\r\n        }\r\n    }\r\n`;\r\n\r\nfunction RegisterForm(props) {\r\n    const [inputFields, setInputFields] = useState({\r\n        email: '',\r\n        password: ''\r\n    });\r\n    const [errorMessages, setErrorMessages] = useState(null);\r\n    const [registered, setRegistered] = useState(false);\r\n\r\n    const handleInputChange = (event) => {\r\n\t\tconst name = event.target.name;\t\r\n\t\tconst value = event.target.value;\r\n\r\n\t\tconst newInputObject = {[name]: value};\r\n\r\n\t\tsetInputFields((prevState) => {\r\n\t\t\treturn {...prevState, ...newInputObject};\r\n\t\t});\r\n\t}\r\n\r\n    const prettifyAndSetErrorMessages = (messagesObj) => {\r\n        let messages = [];\r\n\r\n        Object.values(messagesObj).forEach((message, i) => {\r\n            messages.push(<li key={i} className=\"text-danger\">{message}</li>);\r\n        })\r\n\r\n        setErrorMessages(messages);\r\n    }\r\n\r\n    const checkEmailValidity = (emailInput) => {\r\n        const re = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n        return re.test(emailInput);\r\n    } \r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const trimmedEmail = inputFields.email.trim().toLowerCase();\r\n        const trimmedPassword = inputFields.password.trim();\r\n\r\n        if (!checkEmailValidity(trimmedEmail)) {\r\n            return prettifyAndSetErrorMessages({ email: 'Invalid email format!'});\r\n        }\r\n\r\n        axios({\r\n            method: 'POST',\r\n            url: 'https://fathomless-dusk-73604.herokuapp.com/auth/register',\r\n            data: {\r\n                email: trimmedEmail,\r\n                password: trimmedPassword\r\n            }\r\n        }).then( response => {\r\n            setRegistered(true);\r\n        }).catch( error => {\r\n            prettifyAndSetErrorMessages(error.response.data.errMessages);\r\n        })\r\n    }\r\n\r\n    if (registered) {\r\n        return (\r\n            <Redirect \r\n                to={{\r\n                    pathname: '/login',\r\n                }}\r\n            />\r\n        );\r\n    } else {\r\n        return (\r\n            <AuthContainer>\r\n                <FormContainer>\r\n                    <AuthForm onSubmit={handleSubmit}>\r\n                        <h2>Register</h2>\r\n                        <p className=\"mb-3\">Already registered? \r\n                            <Link to='/login'>Login!</Link>\r\n                        </p>\r\n                        {errorMessages &&\r\n                            <ul>{errorMessages}</ul>}\r\n                        <CVInput  \r\n                            inputName=\"email\"\r\n                            currentValue= {inputFields.email}\r\n                            inputType=\"text\"\r\n                            labelContent=\"Email\"\r\n                            inputChangeHandle={handleInputChange}\r\n                        />\r\n                        <CVInput  \r\n                            inputName=\"password\"\r\n                            currentValue= {inputFields.password}\r\n                            inputType=\"password\"\r\n                            labelContent=\"Password\"\r\n                            inputChangeHandle={handleInputChange}\r\n                        />\r\n                        <button className=\"btn\">Log In</button>\r\n                    </AuthForm>\r\n                </FormContainer>\r\n            </AuthContainer>\r\n        );\r\n    } \r\n}\r\n\r\nexport default RegisterForm;","import React, { useEffect, useState } from 'react';\nimport { Switch, Route } from \"react-router-dom\";\nimport { removeFromLS, getFromLS } from './utils/storage';\nimport CVCreator from './components/cv/cv-creator';\nimport Header from './components/header';\nimport Hero from './components/hero';\nimport Footer from './components/footer';\nimport LoginForm from './components/auth/login-form';\nimport RegisterForm from './components/auth/register-form';\n\nfunction App() {\n\n  const [loggedIn, setLoggedIn] = useState(false);\n\n  const handleLogin = () => {\n    setLoggedIn(true);\n  }\n\n  const handleLogout = () => {\n    removeFromLS('token');\n    removeFromLS('theme');\n    setLoggedIn(false);\n  }\n\n  useEffect(() => {\n    const token = getFromLS('token');\n    if (token) setLoggedIn(true);\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Header loggedIn={loggedIn} logoutHandle={handleLogout}/>\n      <Hero />\n      <Switch>\n        <Route path=\"/register\">\n          <RegisterForm loggedIn={loggedIn} loginHandle={handleLogin} />\n        </Route>\n        <Route path=\"/login\">\n          <LoginForm loggedIn={loggedIn} loginHandle={handleLogin} />\n        </Route>\n        <Route path=\"/\"  render={(props) => <CVCreator {...props} loggedIn={loggedIn} />}>\n        </Route>\n      </Switch>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './styles/cv.scss';\r\nimport { HashRouter } from \"react-router-dom\";\r\n\r\n\r\nimport * as themes from './theme/schema.json';\r\nimport * as allFonts from './theme/allFonts.json';\r\nimport { setToLS, existsInLS } from './utils/storage';\r\n\r\nconst Index = () => {\r\n  if (!existsInLS('all-themes')) {\r\n    setToLS('all-themes', themes.default);\r\n  }\r\n  setToLS('theme', themes.default.data.navyAvi);\r\n  setToLS('all-fonts', allFonts.default);\r\n  return(\r\n    <App />\r\n  );\r\n}\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <HashRouter>\r\n      <Index />\r\n    </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}